{"version":3,"file":"static/js/167.23711906.chunk.js","mappings":"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","sources":["components/DailyNorma/DailyNorma.styled.jsx","components/AddWater/AddWater.styled.js","redux/water/selector.js","components/AddWater/AddWater.jsx","components/EditDailyNorma/EditDailyNorma.styled.js","components/EditDailyNorma/EditDailyNorma.jsx","components/DailyNorma/DailyNorma.jsx","components/Calendar/Today/Today.styled.jsx","components/Calendar/FormatTime/FormatTime.js","components/EditWater/EditWater.styled.js","components/EditWater/EditWater.jsx","components/Calendar/Today/Today.jsx","components/Calendar/Calendar.styled.jsx","components/MonthStatsTable/MonthStatsTable.styled.jsx","components/DaysGeneralStats/DaysGeneralStats.styled.js","components/DaysGeneralStats/DaysGeneralStats.jsx","components/MonthStatsTable/MonthStatsTable.jsx","components/Calendar/Calendar.jsx","pages/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport variables from 'common/Variables';\n\nimport MobileBubbles from '../../images/MobileBubblesBg.jpg';\nimport MobileBubbles2 from '../../images/MobileBubblesBg@2x.jpg';\nimport TabletBubbles from '../../images/TabletBubblesBg.jpg';\nimport TabletBubbles2 from '../../images/TabletBubblesBg@2x.jpg';\nimport DesktopBubbles from '../../images/DesktopBubblesBg.jpg';\nimport DesktopBubbles2 from '../../images/DesktopBubblesBg@2x.jpg';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n\n  img {\n    margin: 0 auto;\n    margin-bottom: 16px;\n\n    @media screen and (min-width: 1440px) {\n      margin-bottom: 24px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 50%;\n    img {\n      height: 548px;\n      object-fit: cover;\n    }\n  }\n`;\n\nexport const NormaContainer = styled.div`\n  display: inline-block;\n  padding: 8px 20px;\n  margin-bottom: 8px;\n  border-radius: 10px;\n  background-color: ${variables.whitePrimary};\n  box-shadow: 0px 4px 8px 0px rgba(158, 187, 255, 0.12);\n  border: 1px solid ${variables.secondaryLightGray};\n\n  @media only screen and (min-width: 768px) {\n    justify-content: center;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    position: absolute;\n    top: 30px;\n    left: 0;\n  }\n`;\n\nexport const NormaTitle = styled.h2`\n  font-size: 18px;\n  margin-bottom: 12px;\n  color: ${variables.blackPrimary};\n  font-weight: 500;\n  line-height: 1.33;\n`;\n\nexport const DailyNormaWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const NormaP = styled.p`\n  font-size: 22px;\n  font-weight: 700;\n  color: ${variables.bluePrimary};\n  line-height: 1;\n\n  @media only screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Image = styled.img`\n  margin: 0px auto 16px;\n`;\n\nexport const NormaButton = styled.button`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  color: ${variables.editColorButton};\n  background-color: transparent;\n\n  &:hover {\n    color: ${variables.secondaryLightOrange};\n    transition: color 250ms ease-in-out;\n  }\n`;\nexport const ProgressContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  button {\n    width: 100%;\n    padding-top: 6px;\n    padding-bottom: 6px;\n    @media screen and (min-width: 768px) {\n      width: 336px;\n      padding-top: 10px;\n      padding-bottom: 10px;\n    }\n    @media screen and (min-width: 1440px) {\n      width: 178px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 12px;\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 23px;\n  }\n`;\n\nexport const WaterProgress = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 19px;\n  width: 100%;\n  p {\n    color: ${variables.bluePrimary};\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 1.33;\n  }\n  @media screen and (min-width: 768px) {\n    width: 356px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 391px;\n  }\n`;\n\nexport const WaterMeter = styled.div`\n  position: relative;\n  height: 8px;\n  background-color: ${variables.secondaryGray};\n  width: calc(100% - 31px);\n  padding: 0 20px 0 11px;\n  border-radius: 10px;\n  margin: 0 auto;\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: ${({ percentage }) => `calc(${percentage}%)`};\n    transform: translate(-50%, -50%);\n    width: 14px;\n    height: 14px;\n    background-color: ${variables.whitePrimary};\n    border: 1px solid ${variables.bluePrimary};\n    border-radius: 100%;\n  }\n  div {\n    position: absolute;\n    border-radius: 10px;\n\n    top: 0;\n    left: 0;\n\n    width: ${({ percentage }) => `${percentage}%`};\n    height: 100%;\n    background: ${variables.secondaryLightBlue};\n  }\n`;\n\nexport const WaterInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  span {\n    color: ${variables.bluePrimary};\n    font-size: 12px;\n    line-height: 1.33;\n    position: relative;\n    &::before {\n      content: '';\n      display: block;\n      width: 1px;\n      height: 8px;\n      background-color: ${variables.secondaryGray};\n      position: absolute;\n      top: -12px;\n      left: 50%;\n      transform: translate(-50%);\n    }\n    &:first-child {\n      margin-left: 11px;\n    }\n    &:nth-child(2) {\n      font-size: 16px;\n      line-height: 1.25;\n      font-weight: 500;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n`;\nexport const AddWaterButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 10px;\n  fill: none;\n  stroke: ${variables.whitePrimary};\n\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  text-align: center;\n  line-height: 1.33;\n  background-color: ${variables.bluePrimary};\n  color: ${variables.whitePrimary};\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n  &:hover {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n\n    transition: box-shadow 250ms ease-in-out;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 178px;\n  }\n`;\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  padding-top: 24px;\n\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n    padding-top: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 32px;\n    padding-top: 20px;\n  }\n`;\n\nexport const LayoutMainContainer = styled.div`\n  justify-content: space-between;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  height: 100%;\n  background-size: 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n\n  background-image: image-set(\n    url(${MobileBubbles}) 1x,\n    url(${MobileBubbles2}) 2x\n  );\n  background-repeat: no-repeat;\n  background-position: top;\n\n  @media screen and (min-width: 768px) {\n    background-image: image-set(\n      url(${TabletBubbles}) 1x,\n      url(${TabletBubbles2}) 2x\n    );\n\n    background-repeat: no-repeat;\n    background-position: center;\n    align-items: start;\n  }\n\n  @media screen and (min-width: 1440px) {\n    background-image: image-set(\n      url(${DesktopBubbles}) 1x,\n      url(${DesktopBubbles2}) 2x\n    );\n\n    background-repeat: no-repeat;\n    background-position: center;\n    align-items: end;\n  }\n`;\n","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  height: 540px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  padding: 24px 12px;\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 504px;\n    borderradius: 10px;\n    padding: 32px 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    height: 504px;\n  }\n`;\nexport const ButtonSave = styled.button`\n  width: 256px;\n  height: 36px;\n  padding: 8px 30px;\n  border-radius: 10px;\n  background: #407bff;\n  color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  &:hover {\n    box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    padding: 10px 30px;\n  }\n`;\nexport const ButtonCount = styled.button`\n  display: flex;\n  padding: 10px;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 30px;\n  border: 1px solid #9ebbff;\n  background: #fff;\n  box-shadow: 0px 2px 4px 0px rgba(64, 123, 255, 0.2);\n`;\nexport const ButtonClose = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  background-color: #fff;\n  transition: transform 0.3s ease;\n  &:hover {\n    transform: scale(1.3);\n    cursor: pointer;\n  }\n`;\nexport const BlockTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\nexport const BlockTitle = styled.h3`\n  color: #2f2f2f;\n  font-size: 26px;\n  line-height: 1.23;\n`;\n\nexport const BtnCounter = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 92px;\n  height: 36px;\n  padding: 6px 10px;\n  border-radius: 40px;\n  background: #d7e3ff;\n  color: #407bff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n`;\nexport const BlockCount = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 24px;\n`;\nexport const ValueP = styled.p`\n  color: #2f2f2f;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  margin-bottom: 16px;\n`;\nexport const AmountP = styled.p`\n  color: #2f2f2f;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  margin-bottom: 12px;\n`;\n\nexport const SelectTime = styled.select`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  width: 120px;\n  height: 44px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  margin-bottom: 24px;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const InputStyle = styled.input`\n  width: 120px;\n  height: 44px;\n  margin-bottom: 24px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const CounterBottom = styled.p`\n  width: 72px;\n  height: 24px;\n  color: #407bff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 16px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    margin-left: unset;\n    margin-right: unset;\n    margin-bottom: 0;\n  }\n`;\nexport const CountSaveBtnBottom = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 24px;\n    justify-content: flex-end;\n    align-items: center;\n  }\n`;\n","export const selectAddWaterVolume = state => state.water.data ;\n\nexport const selectTakeWaterHistory = state => state.water.history ;\n\nexport const selectStageWater = state => state.water ;\n\nexport const selectMounthWater = state => state.water.mounthHistory;\n","import {\n  ButtonClose,\n  ButtonCount,\n  InputStyle,\n  BlockTop,\n  BlockTitle,\n  BlockCount,\n  BtnCounter,\n  ValueP,\n  AmountP,\n  SelectTime,\n  CounterBottom,\n  ButtonSave,\n  CountSaveBtnBottom,\n  Wrapper,\n} from './AddWater.styled';\nimport {\n  decrease,\n  generateTimeOptions,\n  handleUpdateCount,\n  setInitialTime,\n} from '../Utils/utils';\nimport React, { useEffect, useState } from 'react';\nimport icons from '../../common/symbol-defs.svg';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addWaterVolume } from '../../redux/water/operations';\nimport { selectAddWaterVolume } from '../../redux/water/selector';\nimport { toast } from 'react-toastify';\n\nfunction AddWater({ closeModal }) {\n  const [count, setCount] = useState(0);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedTime, setSelectedTime] = useState(0);\n\n  const dispatch = useDispatch();\n  const waterData = useSelector(selectAddWaterVolume);\n\n  const handleDecrease = () => {\n    decrease(count, setCount);\n  };\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const handleUpdateCountWrapper = () => {\n    handleUpdateCount(inputValue, setCount, setInputValue);\n  };\n\n  const handleInputBlur = () => {\n    handleUpdateCountWrapper();\n  };\n\n  useEffect(() => {\n    setInitialTime(setSelectedTime);\n  }, []);\n\n  const handleTimeChange = e => {\n    setSelectedTime(parseInt(e.target.value, 10));\n  };\n\n  const handleSave = () => {\n    if (count === 0)\n      return toast.info(\n        'Amount of water- cannot be zero please enter a value!'\n      );\n\n    const hours = Math.floor(selectedTime / 60);\n    const minutes = selectedTime % 60;\n    const currentDate = new Date();\n    currentDate.setHours(hours, minutes, 0, 0);\n\n    const data = {\n      waterVolume: count,\n      date: currentDate.toISOString(),\n    };\n    toast.success('Data saved 👍');\n    dispatch(addWaterVolume(data));\n    closeModal();\n  };\n\n  return (\n    <Wrapper>\n      <BlockTop>\n        <BlockTitle> Add water</BlockTitle>\n        <ButtonClose onClick={closeModal}>\n          {' '}\n          <svg width={12} height={12} stroke=\"#407BFF\">\n            <use href={`${icons}#icon-cross`} />\n          </svg>\n        </ButtonClose>\n      </BlockTop>\n\n      <ValueP>Choose a value:</ValueP>\n      <AmountP>Amount of water:</AmountP>\n\n      <BlockCount>\n        <ButtonCount onClick={handleDecrease}>\n          <svg width={24} height={24} fill=\"#407BFF\">\n            <use href={`${icons}#icon-minus`} />\n          </svg>\n        </ButtonCount>\n        <BtnCounter>{count}ml</BtnCounter>\n        <ButtonCount onClick={() => setCount(count + 50)}>\n          <svg width={24} height={24} fill=\"#407BFF\">\n            <use href={`${icons}#icon-plus`} />\n          </svg>\n        </ButtonCount>\n      </BlockCount>\n\n      <AmountP>Recording time:</AmountP>\n\n      <SelectTime value={selectedTime} onChange={handleTimeChange}>\n        {generateTimeOptions()}\n      </SelectTime>\n\n      <ValueP>Enter the value of the water used:</ValueP>\n      <InputStyle\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        placeholder={count}\n      />\n      <CountSaveBtnBottom>\n        <CounterBottom>{waterData.waterVolume}ml</CounterBottom>\n        <ButtonSave type=\"button\" onClick={handleSave}>\n          Save\n        </ButtonSave>\n      </CountSaveBtnBottom>\n    </Wrapper>\n  );\n}\n\nexport default AddWater;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  height: 816px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  padding: 24px 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 676px;\n    border-radius: 10px;\n    padding: 32px 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    height: 712px;\n  }\n`;\n\nexport const BlockTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nexport const BlockTitle = styled.h3`\n  color: #2f2f2f;\n  font-size: 26px;\n  line-height: 1.23;\n`;\n\nexport const BlockFormula = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 24px;\n  }\n`;\n\nexport const Formula = styled.p`\n  color: var(--Primery-Color-Black, #2f2f2f);\n\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.25;\n`;\nexport const FormulaSpan = styled.span`\n  color: var(--Primery-Color-Blue, #407bff);\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.33;\n  margin-left: 4px;\n`;\n\nexport const Description = styled.p`\n  border-radius: 10px;\n  outline: 1px solid #d7e3ff;\n  padding: 10px;\n  color: #8f8f8f;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 16px;\n  /* width: 256px;\n  height: 100px; */\n  margin-bottom: 24px;\n`;\n\nexport const DescriptionSpan = styled.span`\n  color: var(--Primery-Color-Blue, #407bff);\n\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.33;\n`;\n\nexport const SecondTitle = styled.p`\n  color: #2f2f2f;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  margin-bottom: 16px;\n`;\n\nexport const ContainerGender = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n  width: 176px;\n  height: 20px;\n  label:first-child {\n    margin-right: 24px;\n  }\n  input:first-child {\n    margin-right: 8px;\n  }\n`;\n\nexport const TextP = styled.p`\n  color: var(--Primery-Color-Black, #2f2f2f);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.25;\n  margin-bottom: 8px;\n`;\n\nexport const BlockAmount = styled.div`\n  display: flex;\n  gap: 6px;\n  margin-bottom: 24px;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    align-items: unset;\n  }\n`;\nexport const BlockAmountText = styled.div`\n  color: var(--Primery-Color-Black, #2f2f2f);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.25;\n  width: 190px;\n\n  @media screen and (min-width: 768px) {\n    width: 328px;\n  }\n`;\n\nexport const AmountWater = styled.p`\n  color: var(--Primery-Color-Blue, #407bff);\n\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.33;\n`;\n\nexport const WrapAmount = styled.span`\n  width: 57px;\n  height: 24px;\n`;\n\nexport const InputStyle = styled.input`\n  width: 256px;\n  height: 44px;\n  margin-bottom: 16px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n \n  outline: none;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const InputGender = styled.input`\n  display: none;\n`;\nexport const LabelGender = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ButtonSave = styled.button`\n  width: 256px;\n  height: 36px;\n  padding: 8px 30px;\n  border-radius: 10px;\n  background: #407bff;\n  color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  margin-top: 8px;\n  &:hover {\n    box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    padding: 10px 30px;\n  }\n`;\n\nexport const ButtonSaveWrap = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const ButtonClose = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  background-color: #fff;\n  transition: transform 0.3s ease;\n  &:hover {\n    transform: scale(1.3);\n    cursor: pointer;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport icons from '../../common/symbol-defs.svg';\nimport {\n  AmountWater,\n  BlockAmount,\n  BlockAmountText,\n  BlockFormula,\n  BlockTitle,\n  BlockTop,\n  ButtonClose,\n  ButtonSave,\n  ButtonSaveWrap,\n  ContainerGender,\n  Description,\n  DescriptionSpan,\n  Formula,\n  FormulaSpan,\n  InputGender,\n  InputStyle,\n  LabelGender,\n  SecondTitle,\n  TextP,\n  WrapAmount,\n  Wrapper,\n} from './EditDailyNorma.styled';\nimport sprite from '../../common/symbol-defs.svg';\nimport { toast } from 'react-toastify';\n\nfunction EditDailyNorma({ closeModal }) {\n  const [gender, setGender] = useState('girl');\n  const [inputValueK, setInputValueK] = useState('');\n  const [inputValueT, setInputValueT] = useState('');\n  const [calculatedResult, setCalculatedResult] = useState(null);\n  const [isValidInputK, setIsValidInputK] = useState(true);\n  const [isValidInputT, setIsValidInputT] = useState(true);\n  const handleChange = event => {\n    setGender(event.target.value);\n  };\n\n  const handleInputChange = (event, setInputValue, setIsValidInput) => {\n    if (/^\\d*$/.test(event.target.value)) {\n      setInputValue(event.target.value);\n      setIsValidInput(true);\n    } else {\n      setIsValidInput(false);\n      toast.error('please enter the numbers');\n    }\n  };\n\n  const handleInputChangeKilo = event => {\n    handleInputChange(event, setInputValueK, setIsValidInputK);\n  };\n\n  const handleInputChangeTime = event => {\n    handleInputChange(event, setInputValueT, setIsValidInputT);\n  };\n\n  const errorBorderStyleK = {\n    border: '1px solid #EF5050',\n  };\n  const errorBorderStyleT = {\n    border: '1px solid #EF5050',\n  };\n\n  useEffect(() => {\n    const waterCalc = () => {\n      if (inputValueK && inputValueT && gender) {\n        let result;\n        if (gender === 'girl') {\n          result = inputValueK * 0.03 + inputValueT * 0.4;\n        } else {\n          result = inputValueK * 0.04 + inputValueT * 0.6;\n        }\n        result = result.toFixed(1);\n\n        setCalculatedResult(result);\n      } else {\n        setCalculatedResult(null);\n      }\n    };\n    waterCalc();\n  }, [inputValueK, inputValueT, gender]);\n\n  return (\n    <Wrapper>\n      <BlockTop>\n        <BlockTitle>My daily norma</BlockTitle>\n        <ButtonClose onClick={closeModal}>\n          <svg width={12} height={12} stroke=\"#407BFF\">\n            <use href={`${icons}#icon-cross`} />\n          </svg>\n        </ButtonClose>\n      </BlockTop>\n\n      <BlockFormula>\n        <li>\n          <Formula>\n            For girl:<FormulaSpan>V=(M*0,03) + (T*0,4)</FormulaSpan>{' '}\n          </Formula>\n        </li>\n        <li>\n          <Formula>\n            For man:<FormulaSpan>V=(M*0,04) + (T*0,6)</FormulaSpan>\n          </Formula>\n        </li>\n      </BlockFormula>\n\n      <Description>\n        <DescriptionSpan>* </DescriptionSpan>V is the volume of the water norm\n        in liters per day, M is your body weight, T is the time of active\n        sports, or another type of activity commensurate in terms of loads (in\n        the absence of these, you must set 0)\n      </Description>\n\n      <SecondTitle>Calculate your rate:</SecondTitle>\n\n      <ContainerGender>\n        <LabelGender htmlFor=\"girl\">\n          {gender === 'girl' ? (\n            <svg width={14} height={14}>\n              <use href={`${sprite}#radio-btn-active`} />\n            </svg>\n          ) : (\n            <svg width={14} height={14}>\n              <use href={`${sprite}#radio-btn`} />\n            </svg>\n          )}\n\n          <InputGender\n            id=\"girl\"\n            type=\"radio\"\n            name=\"gender\"\n            value=\"girl\"\n            checked={gender === 'girl'}\n            onChange={handleChange}\n          />\n          <span>For girl</span>\n        </LabelGender>\n\n        <LabelGender htmlFor=\"man\">\n          {gender === 'girl' ? (\n            <svg width={14} height={14}>\n              <use href={`${sprite}#radio-btn`} />\n            </svg>\n          ) : (\n            <svg width={14} height={14}>\n              <use href={`${sprite}#radio-btn-active`} />\n            </svg>\n          )}\n          <InputGender\n            id=\"man\"\n            type=\"radio\"\n            name=\"gender\"\n            value=\"man\"\n            checked={gender === 'man'}\n            onChange={handleChange}\n          />\n          <span>For man</span>\n        </LabelGender>\n      </ContainerGender>\n\n      <TextP>Your weight in kilograms:</TextP>\n\n      <InputStyle\n        type=\"text\"\n        value={inputValueK}\n        onChange={handleInputChangeKilo}\n        placeholder=\"0\"\n        style={isValidInputK ? {} : errorBorderStyleK}\n      />\n\n      <TextP>\n        The time of active participation in sports or other activities with a\n        high physical. load:\n      </TextP>\n\n      <InputStyle\n        type=\"text\"\n        value={inputValueT}\n        onChange={handleInputChangeTime}\n        placeholder=\"0\"\n        style={isValidInputT ? {} : errorBorderStyleT}\n      />\n      <BlockAmount>\n        <BlockAmountText>\n          The required amount of water in liters per day:\n        </BlockAmountText>\n        <WrapAmount>\n          {calculatedResult && <AmountWater>{calculatedResult} L</AmountWater>}\n        </WrapAmount>\n      </BlockAmount>\n      <SecondTitle>Write down how much water you will drink:</SecondTitle>\n      <InputStyle\n        type=\"text\"\n        // value={inputValue}\n        // onChange=''\n        // onBlur={handleInputBlur}\n        placeholder=\"0\"\n        // isvalid={isValidInput}\n      />\n      <ButtonSaveWrap>\n        <ButtonSave type=\"button\">Save</ButtonSave>\n      </ButtonSaveWrap>\n    </Wrapper>\n  );\n}\n\nexport default EditDailyNorma;\n","import {\n  Container,\n  NormaContainer,\n  NormaTitle,\n  DailyNormaWrapper,\n  NormaP,\n  NormaButton,\n  ProgressContainer,\n  WaterProgress,\n  WaterInfo,\n  WaterMeter,\n  AddWaterButton,\n} from './DailyNorma.styled';\nimport sprite from '../../common/symbol-defs.svg';\n\nimport MobileBottle from '../../images/MobileBottle.png';\nimport MobileBottle2 from '../../images/MobileBottle@2x.png';\nimport TabletBottle from '../../images/TabletHomeBottle.png';\nimport TabletBottle2 from '../../images/TabletHomeBottle@2x.png';\nimport DesktopBottle from '../../images/DesktopHomeBottle.png';\nimport DesktopBottle2 from '../../images/DesktopHomeBottle@2x.png';\nimport MainModal from 'components/MainModal/MainModal';\nimport ModalAddWater from 'components/AddWater/AddWater';\nimport { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { selectStageWater } from '../../redux/water/selector';\nimport { toast } from 'react-toastify';\nimport { selectIsUser } from '../../redux/auth/selectorsAuth';\nimport EditDailyNorma from 'components/EditDailyNorma/EditDailyNorma';\n\nconst DailyNorma = () => {\n  const [modalActive, setModalActive] = useState(false);\n  const [modalDailyActive, setmodalDailyActive] = useState(false);\n  // const [alreadyShownToast, setAlreadyShownToast] = useState(false);\n\n  \n\n  const { percentage } = useSelector(selectStageWater);\n  const { waterRate } = useSelector(selectIsUser);\n\n  // useEffect(() => {\n  //   if (percentage === 100 && !alreadyShownToast) {\n  //     toast.success(\n  //       'Congratulations. Daily water requirement has been reached!'\n  //     );\n  //     setAlreadyShownToast(true);\n  //   }\n  // }, [percentage, alreadyShownToast]);\n  useEffect(() => {\n    const isToastAlreadyShown =\n      localStorage.getItem('alreadyShownToast') === 'true';\n\n    if (percentage === 100 && !isToastAlreadyShown) {\n      toast.success(\n        'Congratulations. Daily water requirement has been reached!'\n      );\n      localStorage.setItem('alreadyShownToast', 'true');\n    } else if (percentage < 100 && isToastAlreadyShown) {\n      localStorage.setItem('alreadyShownToast', 'false');\n    }\n  }, [percentage]);\n\n \n\n  return (\n    <Container>\n      <NormaContainer>\n        <NormaTitle>My daily norma</NormaTitle>\n        <DailyNormaWrapper>\n          <NormaP>{waterRate / 1000} L</NormaP>\n          <NormaButton onClick={() => setmodalDailyActive(true)}>Edit</NormaButton>\n        </DailyNormaWrapper>\n      </NormaContainer>\n      <picture>\n        <source\n          media=\"(min-width: 1440px)\"\n          srcSet={`${DesktopBottle} 1x, ${DesktopBottle2} 2x`}\n          type=\"image/png\"\n        />\n        <source\n          media=\"(min-width: 768px)\"\n          srcSet={`${TabletBottle} 1x, ${TabletBottle2} 2x`}\n          type=\"image/png\"\n        />\n        <source\n          media=\"(max-width: 767px)\"\n          srcSet={`${MobileBottle} 1x, ${MobileBottle2} 2x`}\n          type=\"image/png\"\n        />\n        <img src={DesktopBottle} alt=\"bottle\" />\n      </picture>\n      <ProgressContainer>\n        <WaterProgress>\n          <p>Today</p>\n          <WaterMeter percentage={percentage}>\n            <div />\n          </WaterMeter>\n          <WaterInfo>\n            <span>0%</span>\n            <span>50%</span>\n            <span>100%</span>\n          </WaterInfo>\n        </WaterProgress>\n        <AddWaterButton onClick={() => setModalActive(true)}>\n          <svg width={24} height={24}>\n            <use href={`${sprite}#plus-circle`} />\n          </svg>\n          Add Water\n        </AddWaterButton>\n      </ProgressContainer>\n      \n      <MainModal active={modalDailyActive} setActive={setmodalDailyActive}>\n        <EditDailyNorma closeModal={() => setmodalDailyActive(false)}  />\n      </MainModal>\n      <MainModal active={modalActive} setActive={setModalActive}>\n        <ModalAddWater closeModal={() => setModalActive(false)} />\n      </MainModal>\n    </Container>\n  );\n};\nexport default DailyNorma;\n","import variables from 'common/Variables';\nimport styled from 'styled-components';\n\nexport const TodayContainer = styled.div`\n  width: fit-content;\n`;\n\nexport const TodayHeader = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: ${variables.blackPrimary};\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    line-height: 1.23;\n  }\n`;\n\nexport const TableWrapper = styled.div`\n  height: 220px;\n  overflow-y: auto;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    height: 228px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 212px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${variables.secondaryLightBlue};\n    border-radius: 2px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: ${variables.secondaryGray};\n    width: 1px;\n  }\n`;\n\nexport const TodayTable = styled.table`\n  border-collapse: collapse;\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 534px;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  border-bottom: 1px solid ${variables.secondaryGray};\n  margin-bottom: 12px;\n\n  & Button {\n    background-color: transparent;\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  justify-items: center;\n\n  @media screen and (min-width: 768px) {\n    svg {\n      width: 36px;\n      height: 36px;\n    }\n  }\n`;\n\nexport const TodayTableData = styled.td`\n  text-align: center;\n  color: ${variables.bluePrimary};\n  font-family: Roboto;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n`;\n\nexport const TextTableData = styled.td`\n  padding: 12px;\n  text-align: left;\n  color: ${variables.bluePrimary};\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n`;\n\nexport const TimeTableData = styled.td`\n  padding-right: 35px;\n  text-align: left;\n  color: ${variables.blackPrimary};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n\n  @media screen and (min-width: 768px) {\n    padding-right: 390px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-right: 278px;\n  }\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  fill: none;\n  stroke: ${variables.secondaryLightBlue};\n  margin: 4px;\n  cursor: pointer;\n\n  &::after {\n    position: absolute;\n    content: '';\n    display: block;\n    width: 100%;\n    height: 1px;\n    border-radius: 1px;\n    bottom: 0px;\n    background-color: transparent;\n    transition: background-color 250ms ease-in-out;\n  }\n\n  &:hover {\n    &::after {\n      background-color: ${variables.secondaryLightBlue};\n    }\n  }\n`;\n\nexport const TrashButton = styled(Button)`\n  stroke: ${variables.secondaryRed};\n\n  &:hover {\n    &::after {\n      background-color: ${variables.secondaryRed};\n    }\n  }\n`;\nexport const AddWaterButton = styled.button`\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  padding: 12px 8px;\n  color: ${variables.bluePrimary};\n  background-color: transparent;\n\n  &:hover {\n    color: ${variables.secondaryLightOrange};\n    cursor: pointer;\n    transition: color 250ms ease-in-out;\n  }\n`;\n","export const FormatTime = (isoDate) => {\n  const date = new Date(isoDate);\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const period = hours < 12 ? 'AM' : 'PM';\n\n  const formattedHours = hours < 10 ? `0${hours}` : hours;\n  const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n\n  return `${formattedHours}:${formattedMinutes} ${period}`;\n};\n","import styled from 'styled-components';\nimport variables from 'common/Variables';\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  height: 648px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  \n  padding: 24px 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 580px;\n    border-radius: 10px;\n    padding: 32px 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    height: 580px;\n  }\n`;\n\nexport const DataWater = styled.li`\nmargin-left: 12px;\ncolor: ${variables.bluePrimary};\nfont-size: 18px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 1.33; \n\n`\n\nexport const DataTime = styled.li`\nmargin-left: 16px;\ncolor: var(--primery-color-black, #2f2f2f);\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 2; \n\n`\n\nexport const ButtonSave = styled.button`\n  width: 256px;\n  height: 36px;\n  padding: 8px 30px;\n  border-radius: 10px;\n  background: #407bff;\n  color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  &:hover {\n    box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    padding: 10px 30px;\n  }\n`;\nexport const ButtonCount = styled.button`\n  display: flex;\n  padding: 10px;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 30px;\n  border: 1px solid #9ebbff;\n  background: #fff;\n  box-shadow: 0px 2px 4px 0px rgba(64, 123, 255, 0.2);\n`;\nexport const ButtonClose = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  background-color: #fff;\n  transition: transform 0.3s ease;\n  &:hover {\n    transform: scale(1.3);\n    cursor: pointer;\n  }\n`;\nexport const BlockTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 24px;\n`;\nexport const BlockTitle = styled.h3`\n  color: #2f2f2f;\n  font-size: 26px;\n  line-height: 1.23;\n`;\n\nexport const BlockWaterTime = styled.ul`\nwidth: 256px;\nheight: 52px;\ndisplay: flex;\npadding: 8px 24px;\nalign-items: center;\nborder-radius: 10px;\nbackground:  #ECF2FF;\nmargin-bottom: 24px;\n`\n\n\n\nexport const BtnCounter = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 92px;\n  height: 36px;\n  padding: 6px 10px;\n  border-radius: 40px;\n  background: #d7e3ff;\n  color: #407bff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n`;\nexport const BlockCount = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 24px;\n`;\nexport const ValueP = styled.p`\n  color: #2f2f2f;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  margin-bottom: 16px;\n`;\nexport const AmountP = styled.p`\n  color: #2f2f2f;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  margin-bottom: 12px;\n`;\n\nexport const SelectTime = styled.select`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  width: 256px;\n  height: 44px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  margin-bottom: 24px;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const InputStyle = styled.input`\n  width: 256px;\n  height: 44px;\n  margin-bottom: 24px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const CounterBottom = styled.p`\n  width: 72px;\n  height: 24px;\n  color: #407bff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 16px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    margin-left: unset;\n    margin-right: unset;\n    margin-bottom: 0;\n  }\n`;\nexport const CountSaveBtnBottom = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 24px;\n    justify-content: flex-end;\n    align-items: center;\n  }\n`;\n","import { toast } from 'react-toastify';\nimport React, { useState, useEffect } from 'react';\nimport icons from '../../common/symbol-defs.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ButtonClose,\n  ButtonCount,\n  InputStyle,\n  BlockTop,\n  BlockTitle,\n  BlockCount,\n  BtnCounter,\n  ValueP,\n  AmountP,\n  SelectTime,\n  CounterBottom,\n  ButtonSave,\n  CountSaveBtnBottom,\n  BlockWaterTime,\n  \n  Wrapper,\n  \n  DataWater,\n  DataTime,\n} from './EditWater.styled';\nimport {\n  decrease,\n  generateTimeOptions,\n  handleUpdateCount,\n  setInitialTime,\n} from 'components/Utils/utils';\nimport {  updateWaterVolume } from '../../redux/water/operations';\nimport { selectAddWaterVolume } from '../../redux/water/selector';\nimport { FormatTime } from '../Calendar/FormatTime/FormatTime';\n\n\n\n\n\nexport default function EditWater({ closeModal, waterRecord}) {\n  const [count, setCount] = useState(waterRecord ? waterRecord.waterVolume : 0);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedTime, setSelectedTime] = useState(0);\n\n  const dispatch = useDispatch();\n  const waterData = useSelector(selectAddWaterVolume);\n\n  useEffect(() => {\n    setInitialTime(setSelectedTime);\n  }, []);\n\n  useEffect(() => {\n    if (waterRecord) {\n      setCount(waterRecord.waterVolume);\n    }\n  }, [waterRecord]);\n\n  const handleDecrease = () => {\n    decrease(count, setCount);\n  };\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const handleUpdateCountWrapper = () => {\n    handleUpdateCount(inputValue, setCount, setInputValue);\n  };\n\n  const handleInputBlur = () => {\n    handleUpdateCountWrapper();\n  };\n\n  const handleTimeChange = e => {\n    setSelectedTime(parseInt(e.target.value, 10));\n  };\n\n  const handleSave = () => {\n    if (count === 0)\n      return toast.info(\n        'Amount of water- cannot be zero please enter a value!'\n      );\n    const hours = Math.floor(selectedTime / 60);\n    const minutes = selectedTime % 60;\n    \n    const currentDate = new Date();\n    currentDate.setHours(hours, minutes, 0, 0);\n\n    const data = {\n      waterVolume: count,\n      date: currentDate.toISOString(),\n    };\n\n    const waterId = waterRecord._id;\n    dispatch(updateWaterVolume({ waterId, data }));\n    toast.success('Data changed successfully 👍');\n    closeModal();\n  };\n\n\n\n  return (\n    <Wrapper>\n      <BlockTop>\n        <BlockTitle>Edit the entered amount of water</BlockTitle>\n        <ButtonClose onClick={closeModal}>\n          {' '}\n          <svg width={12} height={12} stroke=\"#407BFF\">\n            <use href={`${icons}#icon-cross`} />\n          </svg>\n        </ButtonClose>\n      </BlockTop>\n      <BlockWaterTime>\n        <svg width={36} height={36} fill=\"#407BFF\">\n          <use href={`${icons}#icon-glass`} />\n        </svg>\n        <DataWater>{waterData.waterVolume} ml</DataWater>\n        <DataTime>{FormatTime(waterData.date)}</DataTime>\n      \n      </BlockWaterTime>\n      <ValueP>Correct entered data:</ValueP>\n      <AmountP>Amount of water:</AmountP>\n\n      <BlockCount>\n        <ButtonCount onClick={handleDecrease}>\n          <svg width={24} height={24} fill=\"#407BFF\">\n            <use href={`${icons}#icon-minus`} />\n          </svg>\n        </ButtonCount>\n        <BtnCounter>{count}ml</BtnCounter>\n        <ButtonCount onClick={() => setCount(count + 50)}>\n          <svg width={24} height={24} fill=\"#407BFF\">\n            <use href={`${icons}#icon-plus`} />\n          </svg>\n        </ButtonCount>\n      </BlockCount>\n\n      <AmountP>Recording time:</AmountP>\n\n      <SelectTime value={selectedTime} onChange={handleTimeChange}>\n        {generateTimeOptions()}\n      </SelectTime>\n\n      <ValueP>Enter the value of the water used:</ValueP>\n      <InputStyle\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        placeholder=\"50\"\n      />\n      <CountSaveBtnBottom>\n        <CounterBottom>{waterData.waterVolume}ml</CounterBottom>\n        <ButtonSave type=\"button\" onClick={handleSave}>\n          Save\n        </ButtonSave>\n      </CountSaveBtnBottom>\n    </Wrapper>\n  );\n}\n","import { useState } from \"react\";\nimport sprite from \"../../../common/symbol-defs.svg\";\nimport {\n  TodayContainer,\n  TodayHeader,\n  TableWrapper,\n  TodayTable,\n  TableRow,\n  TodayTableData,\n  ImageWrapper,\n  Button,\n  TrashButton,\n  TextTableData,\n  TimeTableData,\n  AddWaterButton,\n} from \"./Today.styled\";\nimport React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchWaterDataToday } from \"../../../redux/water/operations\";\nimport { FormatTime } from \"../FormatTime/FormatTime\";\nimport { selectTakeWaterHistory } from \"../../../redux/water/selector\";\nimport MainModal from \"components/MainModal/MainModal\";\nimport ModalAddWater from \"components/AddWater/AddWater\";\nimport EditWater from \"components/EditWater/EditWater\";\n\nconst Today = () => {\n  const [modalActive, setModalActive] = useState(false);\n  const [modalEditActive, setModalEditActive] = useState(false);\n \n  const [selectedWaterRecord, setSelectedWaterRecord] = useState(null);\n \n  const waterData = useSelector(selectTakeWaterHistory);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!waterData.length) {\n      dispatch(fetchWaterDataToday());\n    }\n  }, [dispatch, waterData]);\n\n  return (\n    <>\n      <TodayContainer>\n        <TodayHeader>Today</TodayHeader>\n        <TableWrapper>\n          <TodayTable>\n            <tbody>\n              {waterData.map((waterRecord) => (\n                <TableRow key={waterRecord._id}>\n                  <TodayTableData>\n                    <ImageWrapper>\n                      <svg width={26} height={26}>\n                        <use href={`${sprite}#cup`}></use>\n                      </svg>\n                    </ImageWrapper>\n                  </TodayTableData>\n\n                  <TextTableData>{waterRecord.waterVolume} ml</TextTableData>\n                  <TimeTableData>{FormatTime(waterRecord.date)}</TimeTableData>\n\n                  <TodayTableData>\n                    {/* <Button onClick={() => setModalEditActive(true)}> */}\n                    <Button onClick={() => {\n                      setModalEditActive(true);\n                      setSelectedWaterRecord(waterRecord); // Установите выбранную запись в состояние\n                    }}>\n                      <svg width={16} height={16}>\n                        <use href={`${sprite}#pencil-square`}></use>\n                      </svg>\n                    </Button>\n                  </TodayTableData>\n                  <TodayTableData>\n                    <TrashButton>\n                      <svg width={16} height={16}>\n                        <use href={`${sprite}#trash-can`}></use>\n                      </svg>\n                    </TrashButton>\n                  </TodayTableData>\n                </TableRow>\n              ))}\n            </tbody>\n          </TodayTable>\n          <AddWaterButton onClick={() => setModalActive(true)}>\n            +Add water\n          </AddWaterButton>\n        </TableWrapper>\n      </TodayContainer>\n\n      <MainModal active={modalActive} setActive={setModalActive}>\n        <ModalAddWater closeModal={() => setModalActive(false)} />\n      </MainModal>\n      <MainModal active={modalEditActive} setActive={setModalEditActive}>\n        <EditWater closeModal={() => setModalEditActive(false)} waterRecord={selectedWaterRecord} />\n      </MainModal>\n    </>\n  );\n};\n\nexport default Today;\n","import variables from 'common/Variables';\nimport styled from 'styled-components';\n\nexport const CalendarWrap = styled.div`\n  border-radius: 10px;\n  background-color: ${variables.secondaryLightGray};\n  box-shadow: 0px 4px 14px rgba(64, 123, 255, 0.3);\n  display: flex;\n  padding: 24px 8px;\n  flex-direction: column;\n  gap: 24px;\n  width: 280px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    padding: 32px 24px;\n  }\n  @media screen and (min-width: 1440px) {\n    align-self: normal;\n    width: 50%;\n    padding: 32px 24px;\n  }\n`;\n","import variables from 'common/Variables';\nimport styled from 'styled-components';\n\nexport const DayUl = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px 26px;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px 34px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    column-gap: 22px;\n  }\n`;\n\nexport const DayLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\n\nexport const StatsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 506px;\n\n  @media screen and (min-width: 768px) {\n    height: 340px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 284px;\n  }\n`;\n\nexport const DayNumber = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n\n  border-radius: 50%;\n  background-color: ${variables.whitePrimary};\n  outline: ${variables.secondaryLightOrange} solid 1px;\n  font-size: 14px;\n  line-height: 1.28;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px 34px;\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nexport const WaterPercentage = styled.span`\n  font-size: 10px;\n  font-weight: 400;\n  margin-top: 4px;\n  line-height: 1.6;\n  color: ${variables.secondaryLightBlue};\n\n  @media screen and (min-width: 768px) {\n    font-size: 13px;\n    line-height: 1.53;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 12px;\n    line-height: 1.5;\n  }\n`;\n\nexport const TodayDiv = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const CurrentMonth = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${variables.bluePrimary};\n`;\n\nexport const MonthSwipe = styled.button`\n  margin: 0px 10px;\n  background-color: rgba(0, 0, 255, 0);\n  cursor: pointer;\n`;\n\nexport const MonthName = styled.span`\n  font-size: 16px;\n  line-height: 20px;\n`;\n\nexport const MonthTitle = styled.h2`\n  color: ${variables.blackPrimary};\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    line-height: 1.23;\n  }\n`;\n","import styled from \"styled-components\";\nimport color from \"../../common/Variables\";\n\nexport const DailyModal = styled.div`\n  box-sizing: border-box;\n  width: 292px;\n  height: 188px;\n  background-color: ${color.whitePrimary};\n  display: inline-flex;\n  padding: 24px 16px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  border-radius: 10px;\n  box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.3);\n  z-index: 1;\n`;\n\nexport const CloseBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 16px;\n  height: 16px;\n  background-color: #fff;\n  position: absolute;\n  right: 16px;\n`;\n\nexport const Date = styled.p`\n  color: ${color.bluePrimary};\n  line-height: 1.25;\n`;\n\nexport const Value = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.33;\n  color: ${color.bluePrimary};\n`;\n","import icons from \"../../common/symbol-defs.svg\";\nimport { CloseBtn, DailyModal, Date, Value } from \"./DaysGeneralStats.styled\";\n\nexport default function DaysGeneralStats({\n  onClose,\n  day,\n  dailyNorm,\n  mounth,\n  servingOfWater,\n  WaterRate,\n}) {\n  const nameMount = mounth || \"\";\n  const monthName = nameMount.split(\",\")[0].trim();\n\n  return (\n    <div>\n      <DailyModal>\n        {\" \"}\n        <Date>\n          {day}, {monthName}\n        </Date>\n        <CloseBtn onClick={onClose}>\n          {\" \"}\n          <svg width={12} height={12} stroke=\"#407BFF\">\n            <use href={`${icons}#icon-cross`} />\n          </svg>\n        </CloseBtn>\n        <p>\n          Daily norma:<Value> {WaterRate} L</Value>\n        </p>\n        <p>\n          Fulfillment of the daily norm:<Value> {dailyNorm}%</Value>\n        </p>\n        <p>\n          How many servings of water:<Value> {servingOfWater}</Value>\n        </p>\n      </DailyModal>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport sprite from \"../../common/symbol-defs.svg\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  DayUl,\r\n  DayLi,\r\n  DayNumber,\r\n  StatsWrapper,\r\n  WaterPercentage,\r\n  TodayDiv,\r\n  CurrentMonth,\r\n  MonthSwipe,\r\n  MonthName,\r\n  MonthTitle,\r\n} from \"./MonthStatsTable.styled\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { waterMonts } from \"../../redux/water/operations\";\r\nimport { selectMounthWater } from \"../../redux/water/selector\";\r\nimport DaysGeneralStats from \"components/DaysGeneralStats/DaysGeneralStats\";\r\n\r\nconst Month = () => {\r\n  const dispatch = useDispatch();\r\n  const mounthHistory = useSelector(selectMounthWater);\r\n\r\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const [data, setData] = useState([]);\r\n\r\n  const [isModalOpen, setModalOpen] = useState(\"\");\r\n\r\n  const handleButtonClick = (event) => {\r\n    const name = event.target.parentNode.tagName;\r\n    const data = event.target.parentNode.firstChild.textContent;\r\n    if (name === \"LI\") {\r\n      setModalOpen(data);\r\n      return;\r\n    }\r\n    setModalOpen(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setData(mounthHistory);\r\n  }, [mounthHistory]);\r\n\r\n  useEffect(() => {\r\n    dispatch(waterMonts(`${year}-${month}`));\r\n  }, [dispatch, month, year]);\r\n\r\n  function getDaysInMonth(month, year, data) {\r\n    const days = new Date(year, month, 0).getDate();\r\n    const arrData = [];\r\n\r\n    for (let day = 1; day <= days; day++) {\r\n      const fullDate = moment(`${year}-${month}-${day}`, \"YYYY-MM-DD\").format(\r\n        \"YYYY-MM-DD\"\r\n      );\r\n      const event = data.find((event) => event.date === fullDate);\r\n\r\n      arrData.push({\r\n        day,\r\n        dailyNormFulfillment: event ? event.dailyNormFulfillment : 0,\r\n        id: nanoid(),\r\n        servingOfWater: event ? event.servingOfWater : 0,\r\n        WaterRate: event ? event.WaterRate : 2,\r\n      });\r\n    }\r\n    return arrData;\r\n  }\r\n\r\n  const daysInMonth = getDaysInMonth(month, year, data);\r\n\r\n  const handleMonthChange = (newMonth, newYear) => {\r\n    setMonth(newMonth);\r\n    setYear(newYear);\r\n  };\r\n  const handlePrevMonthClick = () => {\r\n    const newMonth = month === 1 ? 12 : month - 1;\r\n    const newYear = month === 1 ? year - 1 : year;\r\n    handleMonthChange(newMonth, newYear);\r\n  };\r\n  const handleNextMonthClick = () => {\r\n    const newMonth = month === 12 ? 1 : month + 1;\r\n    const newYear = month === 12 ? year + 1 : year;\r\n    handleMonthChange(newMonth, newYear);\r\n  };\r\n\r\n  const getFormattedMonthName = () => {\r\n    return `${new Date(year, month - 1)\r\n      .toLocaleString(\"en-US\", { month: \"long\" })\r\n      .charAt(0)\r\n      .toUpperCase()}${new Date(year, month - 1)\r\n      .toLocaleString(\"en-US\", { month: \"long\" })\r\n      .slice(1)}, ${year}`;\r\n  };\r\n\r\n  const dataToday = getFormattedMonthName();\r\n  return (\r\n    <>\r\n      <StatsWrapper>\r\n        <TodayDiv>\r\n          <MonthTitle>Month</MonthTitle>\r\n          <CurrentMonth>\r\n            <MonthSwipe onClick={handlePrevMonthClick}>\r\n              <svg width=\"14\" height=\"14\">\r\n                <use href={`${sprite}#arrow-left`}></use>\r\n              </svg>\r\n            </MonthSwipe>\r\n            <MonthName>{dataToday}</MonthName>\r\n            <MonthSwipe\r\n              onClick={handleNextMonthClick}\r\n              disabled={\r\n                year === new Date().getFullYear() &&\r\n                month === new Date().getMonth() + 1\r\n              }\r\n            >\r\n              <svg width=\"14\" height=\"14\">\r\n                <use href={`${sprite}#arrow-right`}></use>\r\n              </svg>\r\n            </MonthSwipe>\r\n          </CurrentMonth>\r\n        </TodayDiv>\r\n        <DayUl onClick={handleButtonClick}>\r\n          {daysInMonth.map((item) => (\r\n            <DayLi key={item.id}>\r\n              <DayNumber>{item.day}</DayNumber>\r\n              <WaterPercentage>{item.dailyNormFulfillment}%</WaterPercentage>\r\n              {isModalOpen === item.day.toString() && (\r\n                <DaysGeneralStats\r\n                  onClose={() => setModalOpen(\"\")}\r\n                  day={item.day}\r\n                  dailyNorm={item.dailyNormFulfillment}\r\n                  mounth={dataToday}\r\n                  servingOfWater={item.servingOfWater}\r\n                  WaterRate={item.WaterRate}\r\n                />\r\n              )}\r\n            </DayLi>\r\n          ))}\r\n        </DayUl>\r\n      </StatsWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Month;\r\n//  onClose={() => setModalOpen(false)}\r\n","import Today from \"./Today/Today\";\nimport { CalendarWrap } from \"./Calendar.styled\";\nimport Month from \"components/MonthStatsTable/MonthStatsTable\";\n\nconst Calendar = () => {\n  return (\n    <CalendarWrap>\n      <Today />\n      <Month/>\n    </CalendarWrap>\n  );\n};\nexport default Calendar;\n","import React from 'react';\nimport DailyNorma from 'components/DailyNorma/DailyNorma';\nimport Calendar from 'components/Calendar/Calendar';\nimport { HomeContainer } from 'components/DailyNorma/DailyNorma.styled';\nimport { LayoutMainContainer } from 'components/DailyNorma/DailyNorma.styled';\n\nconst HomePage = () => {\n  return (\n    <LayoutMainContainer>\n      <div className=\"container\">\n        <HomeContainer>\n          <DailyNorma />\n          <Calendar />\n        </HomeContainer>\n      </div>\n    </LayoutMainContainer>\n  );\n};\nexport default HomePage;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","NormaContainer","_templateObject2","variables","whitePrimary","secondaryLightGray","NormaTitle","h2","_templateObject3","blackPrimary","DailyNormaWrapper","_templateObject4","NormaP","p","_templateObject5","bluePrimary","NormaButton","img","_templateObject6","button","_templateObject7","editColorButton","secondaryLightOrange","ProgressContainer","_templateObject8","WaterProgress","_templateObject9","WaterMeter","_templateObject10","secondaryGray","_ref","percentage","concat","_ref2","secondaryLightBlue","WaterInfo","_templateObject11","AddWaterButton","_templateObject12","HomeContainer","_templateObject13","LayoutMainContainer","_templateObject14","MobileBubbles","MobileBubbles2","TabletBubbles","TabletBubbles2","DesktopBubbles","DesktopBubbles2","Wrapper","ButtonSave","ButtonCount","ButtonClose","BlockTop","BlockTitle","h3","BtnCounter","BlockCount","ValueP","AmountP","SelectTime","select","InputStyle","input","CounterBottom","CountSaveBtnBottom","selectAddWaterVolume","state","water","data","selectTakeWaterHistory","history","selectStageWater","selectMounthWater","mounthHistory","closeModal","count","setCount","useState","inputValue","setInputValue","selectedTime","setSelectedTime","dispatch","useDispatch","waterData","useSelector","useEffect","setInitialTime","_jsxs","children","_jsx","onClick","width","height","stroke","href","icons","handleDecrease","decrease","fill","value","onChange","e","parseInt","target","generateTimeOptions","type","event","onBlur","handleInputBlur","handleUpdateCount","placeholder","waterVolume","handleSave","toast","info","hours","Math","floor","minutes","currentDate","Date","setHours","date","toISOString","success","addWaterVolume","BlockFormula","ul","Formula","FormulaSpan","span","Description","DescriptionSpan","SecondTitle","ContainerGender","TextP","BlockAmount","BlockAmountText","AmountWater","WrapAmount","_templateObject15","_templateObject16","InputGender","_templateObject17","LabelGender","label","_templateObject18","_templateObject19","ButtonSaveWrap","_templateObject20","_templateObject21","gender","setGender","inputValueK","setInputValueK","inputValueT","setInputValueT","calculatedResult","setCalculatedResult","isValidInputK","setIsValidInputK","isValidInputT","setIsValidInputT","handleChange","handleInputChange","setIsValidInput","test","error","waterCalc","result","toFixed","htmlFor","sprite","id","name","checked","style","border","DailyNorma","modalActive","setModalActive","modalDailyActive","setmodalDailyActive","waterRate","selectIsUser","isToastAlreadyShown","localStorage","getItem","setItem","media","srcSet","DesktopBottle","DesktopBottle2","TabletBottle","TabletBottle2","MobileBottle","MobileBottle2","src","alt","MainModal","active","setActive","EditDailyNorma","ModalAddWater","TodayContainer","TodayHeader","TableWrapper","TodayTable","table","TableRow","tr","ImageWrapper","TodayTableData","td","TextTableData","TimeTableData","Button","TrashButton","secondaryRed","FormatTime","isoDate","getHours","getMinutes","period","formattedHours","formattedMinutes","DataWater","li","DataTime","BlockWaterTime","EditWater","waterRecord","waterId","_id","updateWaterVolume","Today","modalEditActive","setModalEditActive","selectedWaterRecord","setSelectedWaterRecord","length","fetchWaterDataToday","_Fragment","map","CalendarWrap","DayUl","DayLi","StatsWrapper","DayNumber","WaterPercentage","TodayDiv","CurrentMonth","MonthSwipe","MonthName","MonthTitle","DailyModal","color","CloseBtn","Value","DaysGeneralStats","onClose","day","dailyNorm","mounth","servingOfWater","WaterRate","monthName","split","trim","Month","month","setMonth","getMonth","year","setYear","getFullYear","setData","isModalOpen","setModalOpen","waterMonts","daysInMonth","days","getDate","arrData","fullDate","moment","format","find","push","dailyNormFulfillment","nanoid","getDaysInMonth","handleMonthChange","newMonth","newYear","dataToday","toLocaleString","charAt","toUpperCase","slice","handlePrevMonthClick","handleNextMonthClick","disabled","parentNode","tagName","firstChild","textContent","item","toString","Calendar","HomePage","className"],"sourceRoot":""}