{"version":3,"file":"static/js/738.9f5718b2.chunk.js","mappings":"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","sources":["components/DaysGeneralStats/DaysGeneralStats.styled.js","components/DaysGeneralStats/DaysGeneralStats.jsx","components/DailyNorma/DailyNorma.styled.jsx","components/AddWater/AddWater.styled.js","redux/water/selector.js","components/AddWater/AddWater.jsx","components/EditDailyNorma/EditDailyNorma.styled.js","components/EditDailyNorma/EditDailyNorma.jsx","components/DailyNorma/DailyNorma.jsx","components/Calendar/Today/Today.styled.jsx","components/Calendar/FormatTime/FormatTime.js","components/EditWater/EditWater.styled.js","components/EditWater/EditWater.jsx","components/Calendar/Today/Today.jsx","components/Calendar/Calendar.styled.jsx","components/MonthStatsTable/MonthStatsTable.styled.jsx","components/MonthStatsTable/MonthStatsTable.jsx","components/Calendar/Calendar.jsx","pages/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport color from '../../common/Variables';\n\nexport const DailyModal = styled.div`\n  box-sizing: border-box;\n  width: 292px;\n  height: 188px;\n  background-color: ${color.whitePrimary};\n  display: inline-flex;\n  padding: 24px 16px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  border-radius: 10px;\n  box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.3);\n`;\n\nexport const CloseBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 16px;\n  height: 16px;\n  background-color: #fff;\n  position: absolute;\n  right: 16px;\n`;\n\nexport const Date = styled.p`\n  color: ${color.bluePrimary};\n  line-height: 1.25;\n`;\n\nexport const Value = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.33;\n  color: ${color.bluePrimary};\n`;\n","import React, { useState } from 'react';\nimport icons from '../../common/symbol-defs.svg';\nimport { CloseBtn, DailyModal, Date, Value } from './DaysGeneralStats.styled';\n\nexport default function DaysGeneralStats() {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <button onClick={handleOpen}>OpenDailyStatsModal</button>\n\n      {open && (\n        <DailyModal>\n          {' '}\n          <Date>5,April</Date>\n          <CloseBtn onClick={handleClose}>\n            {' '}\n            <svg width={12} height={12} stroke=\"#407BFF\">\n              <use href={`${icons}#icon-cross`} />\n            </svg>\n          </CloseBtn>\n          <p>\n            Daily norma:<Value> 1.5 L</Value>\n          </p>\n          <p>\n            Fulfillment of the daily norm:<Value> 50%</Value>\n          </p>\n          <p>\n            How many servings of water:<Value> 6</Value>\n          </p>\n        </DailyModal>\n      )}\n    </div>\n  );\n}\n","import styled from 'styled-components';\nimport variables from 'common/Variables';\n\nimport MobileBubbles from '../../images/MobileBubblesBg.jpg';\nimport MobileBubbles2 from '../../images/MobileBubblesBg@2x.jpg';\nimport TabletBubbles from '../../images/TabletBubblesBg.jpg';\nimport TabletBubbles2 from '../../images/TabletBubblesBg@2x.jpg';\nimport DesktopBubbles from '../../images/DesktopBubblesBg.jpg';\nimport DesktopBubbles2 from '../../images/DesktopBubblesBg@2x.jpg';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n\n  img {\n    margin: 0 auto;\n    margin-bottom: 16px;\n\n    @media screen and (min-width: 1440px) {\n      margin-bottom: 24px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 50%;\n    img {\n      height: 548px;\n      object-fit: cover;\n    }\n  }\n`;\n\nexport const NormaContainer = styled.div`\n  display: inline-block;\n  padding: 8px 20px;\n  margin-bottom: 8px;\n  border-radius: 10px;\n  background-color: ${variables.whitePrimary};\n  box-shadow: 0px 4px 8px 0px rgba(158, 187, 255, 0.12);\n  border: 1px solid ${variables.secondaryLightGray};\n\n  @media only screen and (min-width: 768px) {\n    justify-content: center;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    position: absolute;\n    top: 30px;\n    left: 0;\n  }\n`;\n\nexport const NormaTitle = styled.h2`\n  font-size: 18px;\n  margin-bottom: 12px;\n  color: ${variables.blackPrimary};\n  font-weight: 500;\n  line-height: 1.33;\n`;\n\nexport const DailyNormaWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const NormaP = styled.p`\n  font-size: 22px;\n  font-weight: 700;\n  color: ${variables.bluePrimary};\n  line-height: 1;\n\n  @media only screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Image = styled.img`\n  margin: 0px auto 16px;\n`;\n\nexport const NormaButton = styled.button`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  color: ${variables.editColorButton};\n  background-color: transparent;\n\n  &:hover {\n    color: ${variables.secondaryLightOrange};\n    transition: color 250ms ease-in-out;\n  }\n`;\nexport const ProgressContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  button {\n    width: 100%;\n    padding-top: 6px;\n    padding-bottom: 6px;\n    @media screen and (min-width: 768px) {\n      width: 336px;\n      padding-top: 10px;\n      padding-bottom: 10px;\n    }\n    @media screen and (min-width: 1440px) {\n      width: 178px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 12px;\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 23px;\n  }\n`;\n\nexport const WaterProgress = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 19px;\n  width: 100%;\n  p {\n    color: ${variables.bluePrimary};\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 1.33;\n  }\n  @media screen and (min-width: 768px) {\n    width: 356px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 391px;\n  }\n`;\n\nexport const WaterMeter = styled.div`\n  position: relative;\n  height: 8px;\n  background-color: ${variables.secondaryGray};\n  width: calc(100% - 31px);\n  padding: 0 20px 0 11px;\n  border-radius: 10px;\n  margin: 0 auto;\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: ${({ percentage }) => `calc(${percentage}%)`};\n    transform: translate(-50%, -50%);\n    width: 14px;\n    height: 14px;\n    background-color: ${variables.whitePrimary};\n    border: 1px solid ${variables.bluePrimary};\n    border-radius: 100%;\n  }\n  div {\n    position: absolute;\n    border-radius: 10px;\n\n    top: 0;\n    left: 0;\n\n    width: ${({ percentage }) => `${percentage}%`};\n    height: 100%;\n    background: ${variables.secondaryLightBlue};\n  }\n`;\n\nexport const WaterInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  span {\n    color: ${variables.bluePrimary};\n    font-size: 12px;\n    line-height: 1.33;\n    position: relative;\n    &::before {\n      content: '';\n      display: block;\n      width: 1px;\n      height: 8px;\n      background-color: ${variables.secondaryGray};\n      position: absolute;\n      top: -12px;\n      left: 50%;\n      transform: translate(-50%);\n    }\n    &:first-child {\n      margin-left: 11px;\n    }\n    &:nth-child(2) {\n      font-size: 16px;\n      line-height: 1.25;\n      font-weight: 500;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n`;\nexport const AddWaterButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 10px;\n  fill: none;\n  stroke: ${variables.whitePrimary};\n\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  text-align: center;\n  line-height: 1.33;\n  background-color: ${variables.bluePrimary};\n  color: ${variables.whitePrimary};\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n  &:hover {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n\n    transition: box-shadow 250ms ease-in-out;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 178px;\n  }\n`;\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  padding-top: 24px;\n\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n    padding-top: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 32px;\n    padding-top: 20px;\n  }\n`;\n\nexport const LayoutMainContainer = styled.div`\n  justify-content: space-between;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  height: 100%;\n  background-size: 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n\n  background-image: image-set(\n    url(${MobileBubbles}) 1x,\n    url(${MobileBubbles2}) 2x\n  );\n  background-repeat: no-repeat;\n  background-position: top;\n\n  @media screen and (min-width: 768px) {\n    background-image: image-set(\n      url(${TabletBubbles}) 1x,\n      url(${TabletBubbles2}) 2x\n    );\n\n    background-repeat: no-repeat;\n    background-position: center;\n    align-items: start;\n  }\n\n  @media screen and (min-width: 1440px) {\n    background-image: image-set(\n      url(${DesktopBubbles}) 1x,\n      url(${DesktopBubbles2}) 2x\n    );\n\n    background-repeat: no-repeat;\n    background-position: center;\n    align-items: end;\n  }\n`;\n","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  height: 540px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  padding: 24px 12px;\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 504px;\n    borderradius: 10px;\n    padding: 32px 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    height: 504px;\n  }\n`;\nexport const ButtonSave = styled.button`\n  width: 256px;\n  height: 36px;\n  padding: 8px 30px;\n  border-radius: 10px;\n  background: #407bff;\n  color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  &:hover {\n    box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    padding: 10px 30px;\n  }\n`;\nexport const ButtonCount = styled.button`\n  display: flex;\n  padding: 10px;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 30px;\n  border: 1px solid #9ebbff;\n  background: #fff;\n  box-shadow: 0px 2px 4px 0px rgba(64, 123, 255, 0.2);\n`;\nexport const ButtonClose = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  background-color: #fff;\n  transition: transform 0.3s ease;\n  &:hover {\n    transform: scale(1.3);\n    cursor: pointer;\n  }\n`;\nexport const BlockTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\nexport const BlockTitle = styled.h3`\n  color: #2f2f2f;\n  font-size: 26px;\n  line-height: 1.23;\n`;\n\nexport const BtnCounter = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 92px;\n  height: 36px;\n  padding: 6px 10px;\n  border-radius: 40px;\n  background: #d7e3ff;\n  color: #407bff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n`;\nexport const BlockCount = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 24px;\n`;\nexport const ValueP = styled.p`\n  color: #2f2f2f;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  margin-bottom: 16px;\n`;\nexport const AmountP = styled.p`\n  color: #2f2f2f;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  margin-bottom: 12px;\n`;\n\nexport const SelectTime = styled.select`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  width: 120px;\n  height: 44px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  margin-bottom: 24px;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const InputStyle = styled.input`\n  width: 120px;\n  height: 44px;\n  margin-bottom: 24px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const CounterBottom = styled.p`\n  width: 72px;\n  height: 24px;\n  color: #407bff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 16px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    margin-left: unset;\n    margin-right: unset;\n    margin-bottom: 0;\n  }\n`;\nexport const CountSaveBtnBottom = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 24px;\n    justify-content: flex-end;\n    align-items: center;\n  }\n`;\n","export const selectAddWaterVolume = state => state.water.data ;\n\nexport const selectTakeWaterHistory = state => state.water.history ;\n\nexport const selectStageWater = state => state.water ;\n\nexport const selectMounthWater = state => state.water.mounthHistory;\n","import {\n  ButtonClose,\n  ButtonCount,\n  InputStyle,\n  BlockTop,\n  BlockTitle,\n  BlockCount,\n  BtnCounter,\n  ValueP,\n  AmountP,\n  SelectTime,\n  CounterBottom,\n  ButtonSave,\n  CountSaveBtnBottom,\n  Wrapper,\n} from './AddWater.styled';\nimport {\n  decrease,\n  generateTimeOptions,\n  handleUpdateCount,\n  setInitialTime,\n} from '../Utils/utils';\nimport React, { useEffect, useState } from 'react';\nimport icons from '../../common/symbol-defs.svg';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addWaterVolume } from '../../redux/water/operations';\nimport { selectAddWaterVolume } from '../../redux/water/selector';\nimport { toast } from 'react-toastify';\n\nfunction AddWater({ closeModal }) {\n  const [count, setCount] = useState(0);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedTime, setSelectedTime] = useState(0);\n\n  const dispatch = useDispatch();\n  const waterData = useSelector(selectAddWaterVolume);\n\n  const handleDecrease = () => {\n    decrease(count, setCount);\n  };\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const handleUpdateCountWrapper = () => {\n    handleUpdateCount(inputValue, setCount, setInputValue);\n  };\n\n  const handleInputBlur = () => {\n    handleUpdateCountWrapper();\n  };\n\n  useEffect(() => {\n    setInitialTime(setSelectedTime);\n  }, []);\n\n  const handleTimeChange = e => {\n    setSelectedTime(parseInt(e.target.value, 10));\n  };\n\n  const handleSave = () => {\n    if (count === 0)\n      return toast.info(\n        'Amount of water- cannot be zero please enter a value!'\n      );\n\n    const hours = Math.floor(selectedTime / 60);\n    const minutes = selectedTime % 60;\n    const currentDate = new Date();\n    currentDate.setHours(hours, minutes, 0, 0);\n\n    const data = {\n      waterVolume: count,\n      date: currentDate.toISOString(),\n    };\n    toast.success('Data saved 👍');\n    dispatch(addWaterVolume(data));\n    closeModal();\n  };\n\n  return (\n    <Wrapper>\n      <BlockTop>\n        <BlockTitle> Add water</BlockTitle>\n        <ButtonClose onClick={closeModal}>\n          {' '}\n          <svg width={12} height={12} stroke=\"#407BFF\">\n            <use href={`${icons}#icon-cross`} />\n          </svg>\n        </ButtonClose>\n      </BlockTop>\n\n      <ValueP>Choose a value:</ValueP>\n      <AmountP>Amount of water:</AmountP>\n\n      <BlockCount>\n        <ButtonCount onClick={handleDecrease}>\n          <svg width={24} height={24} fill=\"#407BFF\">\n            <use href={`${icons}#icon-minus`} />\n          </svg>\n        </ButtonCount>\n        <BtnCounter>{count}ml</BtnCounter>\n        <ButtonCount onClick={() => setCount(count + 50)}>\n          <svg width={24} height={24} fill=\"#407BFF\">\n            <use href={`${icons}#icon-plus`} />\n          </svg>\n        </ButtonCount>\n      </BlockCount>\n\n      <AmountP>Recording time:</AmountP>\n\n      <SelectTime value={selectedTime} onChange={handleTimeChange}>\n        {generateTimeOptions()}\n      </SelectTime>\n\n      <ValueP>Enter the value of the water used:</ValueP>\n      <InputStyle\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        placeholder={count}\n      />\n      <CountSaveBtnBottom>\n        <CounterBottom>{waterData.waterVolume}ml</CounterBottom>\n        <ButtonSave type=\"button\" onClick={handleSave}>\n          Save\n        </ButtonSave>\n      </CountSaveBtnBottom>\n    </Wrapper>\n  );\n}\n\nexport default AddWater;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  height: 816px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  padding: 24px 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 676px;\n    border-radius: 10px;\n    padding: 32px 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    height: 712px;\n  }\n`;\n\nexport const BlockTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nexport const BlockTitle = styled.h3`\n  color: #2f2f2f;\n  font-size: 26px;\n  line-height: 1.23;\n`;\n\nexport const BlockFormula = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 24px;\n  }\n`;\n\nexport const Formula = styled.p`\n  color: var(--Primery-Color-Black, #2f2f2f);\n\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.25;\n`;\nexport const FormulaSpan = styled.span`\n  color: var(--Primery-Color-Blue, #407bff);\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.33;\n  margin-left: 4px;\n`;\n\nexport const Description = styled.p`\n  border-radius: 10px;\n  outline: 1px solid #d7e3ff;\n  padding: 10px;\n  color: #8f8f8f;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 16px;\n  /* width: 256px;\n  height: 100px; */\n  margin-bottom: 24px;\n`;\n\nexport const DescriptionSpan = styled.span`\n  color: var(--Primery-Color-Blue, #407bff);\n\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.33;\n`;\n\nexport const SecondTitle = styled.p`\n  color: #2f2f2f;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  margin-bottom: 16px;\n`;\n\nexport const ContainerGender = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n  width: 176px;\n  height: 20px;\n  label:first-child {\n    margin-right: 24px;\n  }\n  input:first-child {\n    margin-right: 8px;\n  }\n`;\n\nexport const TextP = styled.p`\n  color: var(--Primery-Color-Black, #2f2f2f);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.25;\n  margin-bottom: 8px;\n`;\n\nexport const BlockAmount = styled.div`\n  display: flex;\n  gap: 6px;\n  margin-bottom: 24px;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    align-items: unset;\n  }\n`;\nexport const BlockAmountText = styled.div`\n  color: var(--Primery-Color-Black, #2f2f2f);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.25;\n  width: 190px;\n\n  @media screen and (min-width: 768px) {\n    width: 328px;\n  }\n`;\n\nexport const AmountWater = styled.span`\n  width: 57px;\n  height: 24px;\n  color: var(--Primery-Color-Blue, #407bff);\n\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.33;\n`;\n\nexport const InputStyle = styled.input`\n  width: 256px;\n  height: 44px;\n  margin-bottom: 16px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const ButtonSave = styled.button`\n  width: 256px;\n  height: 36px;\n  padding: 8px 30px;\n  border-radius: 10px;\n  background: #407bff;\n  color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  margin-top: 8px;\n  &:hover {\n    box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    padding: 10px 30px;\n  }\n`;\n\nexport const ButtonSaveWrap = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const ButtonClose = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  background-color: #fff;\n  transition: transform 0.3s ease;\n  &:hover {\n    transform: scale(1.3);\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport icons from '../../common/symbol-defs.svg';\nimport {\n  AmountWater,\n  BlockAmount,\n  BlockAmountText,\n  BlockFormula,\n  BlockTitle,\n  BlockTop,\n  ButtonClose,\n  ButtonSave,\n  ButtonSaveWrap,\n  ContainerGender,\n  Description,\n  DescriptionSpan,\n  Formula,\n  FormulaSpan,\n  InputStyle,\n  SecondTitle,\n  TextP,\n  Wrapper,\n} from './EditDailyNorma.styled';\n\nfunction EditDailyNorma({ closeModal }) {\n  return (\n    <Wrapper>\n      <BlockTop>\n        <BlockTitle>My daily norma</BlockTitle>\n        <ButtonClose onClick={closeModal}>\n          <svg width={12} height={12} stroke=\"#407BFF\">\n            <use href={`${icons}#icon-cross`} />\n          </svg>\n        </ButtonClose>\n      </BlockTop>\n\n      <BlockFormula>\n        <li>\n          <Formula>\n            For girl:<FormulaSpan>V=(M*0,03) + (T*0,4)</FormulaSpan>{' '}\n          </Formula>\n        </li>\n        <li>\n          <Formula>\n            For man:<FormulaSpan>V=(M*0,04) + (T*0,6)</FormulaSpan>\n          </Formula>\n        </li>\n      </BlockFormula>\n      <Description>\n        <DescriptionSpan>* </DescriptionSpan>V is the volume of the water norm\n        in liters per day, M is your body weight, T is the time of active\n        sports, or another type of activity commensurate in terms of loads (in\n        the absence of these, you must set 0)\n      </Description>\n\n      <SecondTitle>Calculate your rate:</SecondTitle>\n      <ContainerGender>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"gender\"\n            value=\"girl\"\n            //   checked={formik.values.gender === \"girl\"}\n            //   onChange={formik.handleChange}\n          />\n          <label>For girl</label>\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"gender\"\n            value=\"man\"\n            //   checked={formik.values.gender === \"man\"}\n            //   onChange={formik.handleChange}\n          />\n          <label>For man</label>\n        </label>\n      </ContainerGender>\n\n      <TextP>Your weight in kilograms:</TextP>\n\n      <InputStyle\n        type=\"text\"\n        // value={inputValue}\n        // onChange={handleInputChange}\n        // onBlur={handleInputBlur}\n        placeholder=\"0\"\n      />\n      <TextP>\n        The time of active participation in sports or other activities with a\n        high physical. load:\n      </TextP>\n\n      <InputStyle\n        type=\"text\"\n        // value={inputValue}\n        // onChange={handleInputChange}\n        // onBlur={handleInputBlur}\n        placeholder=\"0\"\n      />\n      <BlockAmount>\n        <BlockAmountText>\n          The required amount of water in liters per day:\n        </BlockAmountText>\n        <AmountWater>1.8 L</AmountWater>\n      </BlockAmount>\n      <SecondTitle>Write down how much water you will drink:</SecondTitle>\n      <InputStyle\n        type=\"text\"\n        // value={inputValue}\n        // onChange={handleInputChange}\n        // onBlur={handleInputBlur}\n        placeholder=\"0\"\n      />\n      <ButtonSaveWrap>\n        <ButtonSave type=\"button\">Save</ButtonSave>\n      </ButtonSaveWrap>\n    </Wrapper>\n  );\n}\n\nexport default EditDailyNorma;\n","import {\n  Container,\n  NormaContainer,\n  NormaTitle,\n  DailyNormaWrapper,\n  NormaP,\n  NormaButton,\n  ProgressContainer,\n  WaterProgress,\n  WaterInfo,\n  WaterMeter,\n  AddWaterButton,\n} from './DailyNorma.styled';\nimport sprite from '../../common/symbol-defs.svg';\n\nimport MobileBottle from '../../images/MobileBottle.png';\nimport MobileBottle2 from '../../images/MobileBottle@2x.png';\nimport TabletBottle from '../../images/TabletHomeBottle.png';\nimport TabletBottle2 from '../../images/TabletHomeBottle@2x.png';\nimport DesktopBottle from '../../images/DesktopHomeBottle.png';\nimport DesktopBottle2 from '../../images/DesktopHomeBottle@2x.png';\nimport MainModal from 'components/MainModal/MainModal';\nimport ModalAddWater from 'components/AddWater/AddWater';\nimport { useEffect, useState } from 'react';\nimport { modalScrollOff } from 'components/Utils/utils';\nimport { useSelector } from 'react-redux';\nimport { selectStageWater } from '../../redux/water/selector';\nimport { toast } from 'react-toastify';\nimport { selectIsUser } from '../../redux/auth/selectorsAuth';\nimport EditDailyNorma from 'components/EditDailyNorma/EditDailyNorma';\n\nconst DailyNorma = () => {\n  const [modalActive, setModalActive] = useState(false);\n  const [modalDailyActive, setmodalDailyActive] = useState(false);\n  // const [alreadyShownToast, setAlreadyShownToast] = useState(false);\n\n  modalScrollOff(modalActive);\n\n  const { percentage } = useSelector(selectStageWater);\n  const { waterRate } = useSelector(selectIsUser);\n\n  // useEffect(() => {\n  //   if (percentage === 100 && !alreadyShownToast) {\n  //     toast.success(\n  //       'Congratulations. Daily water requirement has been reached!'\n  //     );\n  //     setAlreadyShownToast(true);\n  //   }\n  // }, [percentage, alreadyShownToast]);\n  useEffect(() => {\n    const isToastAlreadyShown =\n      localStorage.getItem('alreadyShownToast') === 'true';\n\n    if (percentage === 100 && !isToastAlreadyShown) {\n      toast.success(\n        'Congratulations. Daily water requirement has been reached!'\n      );\n      localStorage.setItem('alreadyShownToast', 'true');\n    } else if (percentage < 100 && isToastAlreadyShown) {\n      localStorage.setItem('alreadyShownToast', 'false');\n    }\n  }, [percentage]);\n\n  return (\n    <Container>\n      <NormaContainer>\n        <NormaTitle>My daily norma</NormaTitle>\n        <DailyNormaWrapper>\n          <NormaP>{waterRate / 1000} L</NormaP>\n          <NormaButton onClick={() => setmodalDailyActive(true)}>Edit</NormaButton>\n        </DailyNormaWrapper>\n      </NormaContainer>\n      <picture>\n        <source\n          media=\"(min-width: 1440px)\"\n          srcSet={`${DesktopBottle} 1x, ${DesktopBottle2} 2x`}\n          type=\"image/png\"\n        />\n        <source\n          media=\"(min-width: 768px)\"\n          srcSet={`${TabletBottle} 1x, ${TabletBottle2} 2x`}\n          type=\"image/png\"\n        />\n        <source\n          media=\"(max-width: 767px)\"\n          srcSet={`${MobileBottle} 1x, ${MobileBottle2} 2x`}\n          type=\"image/png\"\n        />\n        <img src={DesktopBottle} alt=\"bottle\" />\n      </picture>\n      <ProgressContainer>\n        <WaterProgress>\n          <p>Today</p>\n          <WaterMeter percentage={percentage}>\n            <div />\n          </WaterMeter>\n          <WaterInfo>\n            <span>0%</span>\n            <span>50%</span>\n            <span>100%</span>\n          </WaterInfo>\n        </WaterProgress>\n        <AddWaterButton onClick={() => setModalActive(true)}>\n          <svg width={24} height={24}>\n            <use href={`${sprite}#plus-circle`} />\n          </svg>\n          Add Water\n        </AddWaterButton>\n      </ProgressContainer>\n      <MainModal active={modalActive} setActive={setModalActive}>\n        <ModalAddWater closeModal={() => setModalActive(false)} />\n      </MainModal>\n      <MainModal active={modalDailyActive} setActive={setmodalDailyActive}>\n        <EditDailyNorma closeModal={() => setmodalDailyActive(false)}  />\n      </MainModal>\n    </Container>\n  );\n};\nexport default DailyNorma;\n","import variables from 'common/Variables';\nimport styled from 'styled-components';\n\nexport const TodayContainer = styled.div`\n  width: fit-content;\n`;\n\nexport const TodayHeader = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: ${variables.blackPrimary};\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    line-height: 1.23;\n  }\n`;\n\nexport const TableWrapper = styled.div`\n  height: 220px;\n  overflow-y: auto;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    height: 228px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 212px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${variables.secondaryLightBlue};\n    border-radius: 2px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: ${variables.secondaryGray};\n    width: 1px;\n  }\n`;\n\nexport const TodayTable = styled.table`\n  border-collapse: collapse;\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 534px;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  border-bottom: 1px solid ${variables.secondaryGray};\n  margin-bottom: 12px;\n\n  & Button {\n    background-color: transparent;\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  justify-items: center;\n\n  @media screen and (min-width: 768px) {\n    svg {\n      width: 36px;\n      height: 36px;\n    }\n  }\n`;\n\nexport const TodayTableData = styled.td`\n  text-align: center;\n  color: ${variables.bluePrimary};\n  font-family: Roboto;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n`;\n\nexport const TextTableData = styled.td`\n  padding: 12px;\n  text-align: left;\n  color: ${variables.bluePrimary};\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n`;\n\nexport const TimeTableData = styled.td`\n  padding-right: 35px;\n  text-align: left;\n  color: ${variables.blackPrimary};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n\n  @media screen and (min-width: 768px) {\n    padding-right: 390px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-right: 278px;\n  }\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  fill: none;\n  stroke: ${variables.secondaryLightBlue};\n  margin: 4px;\n  cursor: pointer;\n\n  &::after {\n    position: absolute;\n    content: '';\n    display: block;\n    width: 100%;\n    height: 1px;\n    border-radius: 1px;\n    bottom: 0px;\n    background-color: transparent;\n    transition: background-color 250ms ease-in-out;\n  }\n\n  &:hover {\n    &::after {\n      background-color: ${variables.secondaryLightBlue};\n    }\n  }\n`;\n\nexport const TrashButton = styled(Button)`\n  stroke: ${variables.secondaryRed};\n\n  &:hover {\n    &::after {\n      background-color: ${variables.secondaryRed};\n    }\n  }\n`;\nexport const AddWaterButton = styled.button`\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  padding: 12px 8px;\n  color: ${variables.bluePrimary};\n  background-color: transparent;\n\n  &:hover {\n    color: ${variables.secondaryLightOrange};\n    cursor: pointer;\n    transition: color 250ms ease-in-out;\n  }\n`;\n","export const FormatTime = (isoDate) => {\n  const date = new Date(isoDate);\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const period = hours < 12 ? 'AM' : 'PM';\n\n  const formattedHours = hours < 10 ? `0${hours}` : hours;\n  const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n\n  return `${formattedHours}:${formattedMinutes} ${period}`;\n};\n","import styled from 'styled-components';\nimport variables from 'common/Variables';\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  height: 648px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  \n  padding: 24px 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 580px;\n    border-radius: 10px;\n    padding: 32px 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    height: 580px;\n  }\n`;\n\nexport const DataWater = styled.li`\nmargin-left: 12px;\ncolor: ${variables.bluePrimary};\nfont-size: 18px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 1.33; \n\n`\n\nexport const DataTime = styled.li`\nmargin-left: 16px;\ncolor: var(--primery-color-black, #2f2f2f);\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 2; \n\n`\n\nexport const ButtonSave = styled.button`\n  width: 256px;\n  height: 36px;\n  padding: 8px 30px;\n  border-radius: 10px;\n  background: #407bff;\n  color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  &:hover {\n    box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    padding: 10px 30px;\n  }\n`;\nexport const ButtonCount = styled.button`\n  display: flex;\n  padding: 10px;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 30px;\n  border: 1px solid #9ebbff;\n  background: #fff;\n  box-shadow: 0px 2px 4px 0px rgba(64, 123, 255, 0.2);\n`;\nexport const ButtonClose = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  background-color: #fff;\n  transition: transform 0.3s ease;\n  &:hover {\n    transform: scale(1.3);\n    cursor: pointer;\n  }\n`;\nexport const BlockTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 24px;\n`;\nexport const BlockTitle = styled.h3`\n  color: #2f2f2f;\n  font-size: 26px;\n  line-height: 1.23;\n`;\n\nexport const BlockWaterTime = styled.ul`\nwidth: 256px;\nheight: 52px;\ndisplay: flex;\npadding: 8px 24px;\nalign-items: center;\nborder-radius: 10px;\nbackground:  #ECF2FF;\nmargin-bottom: 24px;\n`\n\n\n\nexport const BtnCounter = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 92px;\n  height: 36px;\n  padding: 6px 10px;\n  border-radius: 40px;\n  background: #d7e3ff;\n  color: #407bff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n`;\nexport const BlockCount = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 24px;\n`;\nexport const ValueP = styled.p`\n  color: #2f2f2f;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  margin-bottom: 16px;\n`;\nexport const AmountP = styled.p`\n  color: #2f2f2f;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  margin-bottom: 12px;\n`;\n\nexport const SelectTime = styled.select`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  width: 256px;\n  height: 44px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  margin-bottom: 24px;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const InputStyle = styled.input`\n  width: 256px;\n  height: 44px;\n  margin-bottom: 24px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const CounterBottom = styled.p`\n  width: 72px;\n  height: 24px;\n  color: #407bff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 16px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    margin-left: unset;\n    margin-right: unset;\n    margin-bottom: 0;\n  }\n`;\nexport const CountSaveBtnBottom = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 24px;\n    justify-content: flex-end;\n    align-items: center;\n  }\n`;\n","import { toast } from 'react-toastify';\nimport React, { useState, useEffect } from 'react';\nimport icons from '../../common/symbol-defs.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ButtonClose,\n  ButtonCount,\n  InputStyle,\n  BlockTop,\n  BlockTitle,\n  BlockCount,\n  BtnCounter,\n  ValueP,\n  AmountP,\n  SelectTime,\n  CounterBottom,\n  ButtonSave,\n  CountSaveBtnBottom,\n  BlockWaterTime,\n  \n  Wrapper,\n  \n  DataWater,\n  DataTime,\n} from './EditWater.styled';\nimport {\n  decrease,\n  generateTimeOptions,\n  handleUpdateCount,\n  setInitialTime,\n} from 'components/Utils/utils';\nimport { addWaterVolume } from '../../redux/water/operations';\nimport { selectAddWaterVolume } from '../../redux/water/selector';\nimport { FormatTime } from '../Calendar/FormatTime/FormatTime';\n\n\n\n\n\nexport default function EditWater({ closeModal}) {\n  const [count, setCount] = useState(0);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedTime, setSelectedTime] = useState(0);\n\n  const dispatch = useDispatch();\n  const waterData = useSelector(selectAddWaterVolume);\n\n\n\n\n\n  const handleDecrease = () => {\n    decrease(count, setCount);\n  };\n\n\n\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const handleUpdateCountWrapper = () => {\n    handleUpdateCount(inputValue, setCount, setInputValue);\n  };\n\n  const handleInputBlur = () => {\n    handleUpdateCountWrapper();\n  };\n\n  useEffect(() => {\n    setInitialTime(setSelectedTime);\n  }, []);\n\n  const handleTimeChange = e => {\n    setSelectedTime(parseInt(e.target.value, 10));\n  };\n\n  const handleSave = () => {\n    if (count === 0)\n      return toast.info(\n        'Amount of water- cannot be zero please enter a value!'\n      );\n    const hours = Math.floor(selectedTime / 60);\n    const minutes = selectedTime % 60;\n    const currentDate = new Date();\n    currentDate.setHours(hours, minutes, 0, 0);\n\n    const data = {\n      waterVolume: count,\n      date: currentDate.toISOString(),\n    };\n    toast.success('Data saved 👍');\n    dispatch(addWaterVolume(data));\n    closeModal();\n  };\n\n\n\n  return (\n    <Wrapper>\n      <BlockTop>\n        <BlockTitle>Edit the entered amount of water</BlockTitle>\n        <ButtonClose onClick={closeModal}>\n          {' '}\n          <svg width={12} height={12} stroke=\"#407BFF\">\n            <use href={`${icons}#icon-cross`} />\n          </svg>\n        </ButtonClose>\n      </BlockTop>\n      <BlockWaterTime>\n        <svg width={36} height={36} fill=\"#407BFF\">\n          <use href={`${icons}#icon-glass`} />\n        </svg>\n        <DataWater>{waterData.waterVolume} ml</DataWater>\n        <DataTime>{FormatTime(waterData.date)}</DataTime>\n      \n      </BlockWaterTime>\n      <ValueP>Correct entered data:</ValueP>\n      <AmountP>Amount of water:</AmountP>\n\n      <BlockCount>\n        <ButtonCount onClick={handleDecrease}>\n          <svg width={24} height={24} fill=\"#407BFF\">\n            <use href={`${icons}#icon-minus`} />\n          </svg>\n        </ButtonCount>\n        <BtnCounter>{count}ml</BtnCounter>\n        <ButtonCount onClick={() => setCount(count + 50)}>\n          <svg width={24} height={24} fill=\"#407BFF\">\n            <use href={`${icons}#icon-plus`} />\n          </svg>\n        </ButtonCount>\n      </BlockCount>\n\n      <AmountP>Recording time:</AmountP>\n\n      <SelectTime value={selectedTime} onChange={handleTimeChange}>\n        {generateTimeOptions()}\n      </SelectTime>\n\n      <ValueP>Enter the value of the water used:</ValueP>\n      <InputStyle\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        placeholder=\"50\"\n      />\n      <CountSaveBtnBottom>\n        <CounterBottom>{waterData.waterVolume}ml</CounterBottom>\n        <ButtonSave type=\"button\" onClick={handleSave}>\n          Save\n        </ButtonSave>\n      </CountSaveBtnBottom>\n    </Wrapper>\n  );\n}\n","import { useState } from \"react\";\nimport sprite from \"../../../common/symbol-defs.svg\";\nimport {\n  TodayContainer,\n  TodayHeader,\n  TableWrapper,\n  TodayTable,\n  TableRow,\n  TodayTableData,\n  ImageWrapper,\n  Button,\n  TrashButton,\n  TextTableData,\n  TimeTableData,\n  AddWaterButton,\n} from \"./Today.styled\";\nimport React, { useEffect } from \"react\";\nimport { modalScrollOff } from \"components/Utils/utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchWaterDataToday } from \"../../../redux/water/operations\";\nimport { FormatTime } from \"../FormatTime/FormatTime\";\nimport { selectTakeWaterHistory } from \"../../../redux/water/selector\";\nimport MainModal from \"components/MainModal/MainModal\";\nimport ModalAddWater from \"components/AddWater/AddWater\";\nimport EditWater from \"components/EditWater/EditWater\";\n\nconst Today = () => {\n  const [modalActive, setModalActive] = useState(false);\n  const [modalEditActive, setModalEditActive] = useState(false);\n  modalScrollOff(modalActive);\n\n  const waterData = useSelector(selectTakeWaterHistory);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await dispatch(fetchWaterDataToday());\n      } catch (error) {\n        console.error(\"Error getting water data in useEffect:\", error);\n      }\n    };\n\n    fetchData();\n  }, [dispatch]);\n\n  return (\n    <>\n      <TodayContainer>\n        <TodayHeader>Today</TodayHeader>\n        <TableWrapper>\n          <TodayTable>\n            <tbody>\n              {waterData.map((waterRecord) => (\n                <TableRow key={waterRecord._id}>\n                  <TodayTableData>\n                    <ImageWrapper>\n                      <svg width={26} height={26}>\n                        <use href={`${sprite}#cup`}></use>\n                      </svg>\n                    </ImageWrapper>\n                  </TodayTableData>\n\n                  <TextTableData>{waterRecord.waterVolume} ml</TextTableData>\n                  <TimeTableData>{FormatTime(waterRecord.date)}</TimeTableData>\n\n                  <TodayTableData>\n                    <Button onClick={() => setModalEditActive(true)}>\n                      <svg width={16} height={16}>\n                        <use href={`${sprite}#pencil-square`}></use>\n                      </svg>\n                    </Button>\n                  </TodayTableData>\n                  <TodayTableData>\n                    <TrashButton>\n                      <svg width={16} height={16}>\n                        <use href={`${sprite}#trash-can`}></use>\n                      </svg>\n                    </TrashButton>\n                  </TodayTableData>\n                </TableRow>\n              ))}\n            </tbody>\n          </TodayTable>\n          <AddWaterButton onClick={() => setModalActive(true)}>\n            +Add water\n          </AddWaterButton>\n        </TableWrapper>\n      </TodayContainer>\n\n      <MainModal active={modalActive} setActive={setModalActive}>\n        <ModalAddWater closeModal={() => setModalActive(false)} />\n      </MainModal>\n      <MainModal active={modalEditActive} setActive={setModalEditActive}>\n        <EditWater closeModal={() => setModalEditActive(false)} />\n      </MainModal>\n    </>\n  );\n};\n\nexport default Today;\n\n// added space for check\n","import variables from 'common/Variables';\nimport styled from 'styled-components';\n\nexport const CalendarWrap = styled.div`\n  border-radius: 10px;\n  background-color: ${variables.secondaryLightGray};\n  box-shadow: 0px 4px 14px rgba(64, 123, 255, 0.3);\n  display: flex;\n  padding: 24px 8px;\n  flex-direction: column;\n  gap: 24px;\n  width: 280px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    padding: 32px 24px;\n  }\n  @media screen and (min-width: 1440px) {\n    align-self: normal;\n    width: 50%;\n    padding: 32px 24px;\n  }\n`;\n","import variables from 'common/Variables';\nimport styled from 'styled-components';\n\nexport const DayUl = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px 26px;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px 34px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    column-gap: 22px;\n  }\n`;\n\nexport const DayLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\n\nexport const StatsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 506px;\n\n  @media screen and (min-width: 768px) {\n    height: 340px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 284px;\n  }\n`;\n\nexport const DayNumber = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n\n  border-radius: 50%;\n  background-color: ${variables.whitePrimary};\n  outline: ${variables.secondaryLightOrange} solid 1px;\n  font-size: 14px;\n  line-height: 1.28;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px 34px;\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nexport const WaterPercentage = styled.span`\n  font-size: 10px;\n  font-weight: 400;\n  margin-top: 4px;\n  line-height: 1.6;\n  color: ${variables.secondaryLightBlue};\n\n  @media screen and (min-width: 768px) {\n    font-size: 13px;\n    line-height: 1.53;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 12px;\n    line-height: 1.5;\n  }\n`;\n\nexport const TodayDiv = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const CurrentMonth = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${variables.bluePrimary};\n`;\n\nexport const MonthSwipe = styled.button`\n  margin: 0px 10px;\n  background-color: rgba(0, 0, 255, 0);\n  cursor: pointer;\n`;\n\nexport const MonthName = styled.span`\n  font-size: 16px;\n  line-height: 20px;\n`;\n\nexport const MonthTitle = styled.h2`\n  color: ${variables.blackPrimary};\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    line-height: 1.23;\n  }\n`;\n","import { useEffect, useState } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport sprite from '../../common/symbol-defs.svg';\r\nimport moment from 'moment';\r\n\r\nimport {\r\n  DayUl,\r\n  DayLi,\r\n  DayNumber,\r\n  StatsWrapper,\r\n  WaterPercentage,\r\n  TodayDiv,\r\n  CurrentMonth,\r\n  MonthSwipe,\r\n  MonthName,\r\n  MonthTitle,\r\n} from './MonthStatsTable.styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { waterMonts } from '../../redux/water/operations';\r\nimport { selectMounthWater } from '../../redux/water/selector';\r\nimport DaysGeneralStats from 'components/DaysGeneralStats/DaysGeneralStats';\r\n\r\nconst Month = () => {\r\n  const dispatch = useDispatch();\r\n  const mounthHistory = useSelector(selectMounthWater);\r\n\r\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const [data, setData] = useState([]);\r\n\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleButtonClick = () => {\r\n    setModalOpen(!isModalOpen);\r\n    console.log('first');\r\n  };\r\n\r\n  useEffect(() => {\r\n    setData(mounthHistory);\r\n  }, [mounthHistory]);\r\n\r\n  useEffect(() => {\r\n    dispatch(waterMonts(`${year}-${month}`));\r\n  }, [dispatch, month, year]);\r\n\r\n  function getDaysInMonth(month, year, data) {\r\n    const days = new Date(year, month, 0).getDate();\r\n    const arrData = [];\r\n\r\n    for (let day = 1; day <= days; day++) {\r\n      const fullDate = moment(`${year}-${month}-${day}`, 'YYYY-MM-DD').format(\r\n        'YYYY-MM-DD'\r\n      );\r\n      const event = data.find(event => event.date === fullDate);\r\n\r\n      arrData.push({\r\n        day,\r\n        dailyNormFulfillment: event ? event.dailyNormFulfillment : 0,\r\n      });\r\n    }\r\n    return arrData;\r\n  }\r\n\r\n  const daysInMonth = getDaysInMonth(month, year, data);\r\n\r\n  const handleMonthChange = (newMonth, newYear) => {\r\n    setMonth(newMonth);\r\n    setYear(newYear);\r\n  };\r\n  const handlePrevMonthClick = () => {\r\n    const newMonth = month === 1 ? 12 : month - 1;\r\n    const newYear = month === 1 ? year - 1 : year;\r\n    handleMonthChange(newMonth, newYear);\r\n  };\r\n  const handleNextMonthClick = () => {\r\n    const newMonth = month === 12 ? 1 : month + 1;\r\n    const newYear = month === 12 ? year + 1 : year;\r\n    handleMonthChange(newMonth, newYear);\r\n  };\r\n\r\n  const getFormattedMonthName = () => {\r\n    return `${new Date(year, month - 1)\r\n      .toLocaleString('en-US', { month: 'long' })\r\n      .charAt(0)\r\n      .toUpperCase()}${new Date(year, month - 1)\r\n      .toLocaleString('en-US', { month: 'long' })\r\n      .slice(1)}, ${year}`;\r\n  };\r\n\r\n  const dataToday = getFormattedMonthName();\r\n  return (\r\n    <>\r\n      <StatsWrapper>\r\n        <TodayDiv>\r\n          <MonthTitle>Month</MonthTitle>\r\n          <CurrentMonth>\r\n            <MonthSwipe onClick={handlePrevMonthClick}>\r\n              <svg width=\"14\" height=\"14\">\r\n                <use href={`${sprite}#arrow-left`}></use>\r\n              </svg>\r\n            </MonthSwipe>\r\n            <MonthName>{dataToday}</MonthName>\r\n            <MonthSwipe\r\n              onClick={handleNextMonthClick}\r\n              disabled={\r\n                year === new Date().getFullYear() &&\r\n                month === new Date().getMonth() + 1\r\n              }\r\n            >\r\n              <svg width=\"14\" height=\"14\">\r\n                <use href={`${sprite}#arrow-right`}></use>\r\n              </svg>\r\n            </MonthSwipe>\r\n          </CurrentMonth>\r\n        </TodayDiv>\r\n        <DayUl>\r\n          {daysInMonth.map(item => (\r\n            <DayLi key={nanoid()} onClick={handleButtonClick}>\r\n              <DayNumber>{item.day}</DayNumber>\r\n              <WaterPercentage>{item.dailyNormFulfillment}%</WaterPercentage>\r\n            </DayLi>\r\n          ))}\r\n          {isModalOpen && (\r\n            <DaysGeneralStats onClose={() => setModalOpen(false)} />\r\n          )}\r\n        </DayUl>\r\n      </StatsWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Month;\r\n","import Today from \"./Today/Today\";\nimport { CalendarWrap } from \"./Calendar.styled\";\nimport Month from \"components/MonthStatsTable/MonthStatsTable\";\n\nconst Calendar = () => {\n  return (\n    <CalendarWrap>\n      <Today />\n      <Month/>\n    </CalendarWrap>\n  );\n};\nexport default Calendar;\n","import React from 'react';\nimport DailyNorma from 'components/DailyNorma/DailyNorma';\nimport Calendar from 'components/Calendar/Calendar';\nimport { HomeContainer } from 'components/DailyNorma/DailyNorma.styled';\nimport { LayoutMainContainer } from 'components/DailyNorma/DailyNorma.styled';\n\nconst HomePage = () => {\n  return (\n    <LayoutMainContainer>\n      <div className=\"container\">\n        <HomeContainer>\n          <DailyNorma />\n          <Calendar />\n        </HomeContainer>\n      </div>\n    </LayoutMainContainer>\n  );\n};\nexport default HomePage;\n"],"names":["DailyModal","styled","div","_templateObject","_taggedTemplateLiteral","color","whitePrimary","CloseBtn","button","_templateObject2","Date","p","_templateObject3","bluePrimary","Value","span","_templateObject4","DaysGeneralStats","open","setOpen","useState","_jsxs","children","_jsx","onClick","handleOpen","handleClose","width","height","stroke","href","concat","icons","Container","NormaContainer","variables","secondaryLightGray","NormaTitle","h2","blackPrimary","DailyNormaWrapper","NormaP","_templateObject5","NormaButton","img","_templateObject6","_templateObject7","editColorButton","secondaryLightOrange","ProgressContainer","_templateObject8","WaterProgress","_templateObject9","WaterMeter","_templateObject10","secondaryGray","_ref","percentage","_ref2","secondaryLightBlue","WaterInfo","_templateObject11","AddWaterButton","_templateObject12","HomeContainer","_templateObject13","LayoutMainContainer","_templateObject14","MobileBubbles","MobileBubbles2","TabletBubbles","TabletBubbles2","DesktopBubbles","DesktopBubbles2","Wrapper","ButtonSave","ButtonCount","ButtonClose","BlockTop","BlockTitle","h3","BtnCounter","BlockCount","ValueP","AmountP","SelectTime","select","InputStyle","input","CounterBottom","CountSaveBtnBottom","selectAddWaterVolume","state","water","data","selectTakeWaterHistory","history","selectStageWater","selectMounthWater","mounthHistory","closeModal","count","setCount","inputValue","setInputValue","selectedTime","setSelectedTime","dispatch","useDispatch","waterData","useSelector","useEffect","setInitialTime","handleDecrease","decrease","fill","value","onChange","e","parseInt","target","generateTimeOptions","type","event","onBlur","handleInputBlur","handleUpdateCount","placeholder","waterVolume","handleSave","toast","info","hours","Math","floor","minutes","currentDate","setHours","date","toISOString","success","addWaterVolume","BlockFormula","ul","Formula","FormulaSpan","Description","DescriptionSpan","SecondTitle","ContainerGender","TextP","BlockAmount","BlockAmountText","AmountWater","_templateObject15","_templateObject16","ButtonSaveWrap","_templateObject17","_templateObject18","name","DailyNorma","modalActive","setModalActive","modalDailyActive","setmodalDailyActive","modalScrollOff","waterRate","selectIsUser","isToastAlreadyShown","localStorage","getItem","setItem","media","srcSet","DesktopBottle","DesktopBottle2","TabletBottle","TabletBottle2","MobileBottle","MobileBottle2","src","alt","sprite","MainModal","active","setActive","ModalAddWater","EditDailyNorma","TodayContainer","TodayHeader","TableWrapper","TodayTable","table","TableRow","tr","ImageWrapper","TodayTableData","td","TextTableData","TimeTableData","Button","TrashButton","secondaryRed","FormatTime","isoDate","getHours","getMinutes","period","formattedHours","formattedMinutes","DataWater","li","DataTime","BlockWaterTime","EditWater","Today","modalEditActive","setModalEditActive","async","fetchWaterDataToday","error","console","fetchData","_Fragment","map","waterRecord","_id","CalendarWrap","DayUl","DayLi","StatsWrapper","DayNumber","WaterPercentage","TodayDiv","CurrentMonth","MonthSwipe","MonthName","MonthTitle","Month","month","setMonth","getMonth","year","setYear","getFullYear","setData","isModalOpen","setModalOpen","handleButtonClick","log","waterMonts","daysInMonth","days","getDate","arrData","day","fullDate","moment","format","find","push","dailyNormFulfillment","getDaysInMonth","handleMonthChange","newMonth","newYear","dataToday","toLocaleString","charAt","toUpperCase","slice","handlePrevMonthClick","handleNextMonthClick","disabled","item","nanoid","onClose","Calendar","HomePage","className"],"sourceRoot":""}