{"version":3,"file":"static/js/738.2cb81650.chunk.js","mappings":"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","sources":["components/DaysGeneralStats/DaysGeneralStats.styled.js","components/DaysGeneralStats/DaysGeneralStats.jsx","components/DailyNorma/DailyNorma.styled.jsx","components/AddWater/AddWater.styled.js","redux/water/selector.js","components/AddWater/AddWater.jsx","components/EditDailyNorma/EditDailyNorma.styled.js","components/EditDailyNorma/EditDailyNorma.jsx","components/DailyNorma/DailyNorma.jsx","components/Calendar/Today/Today.styled.jsx","components/Calendar/FormatTime/FormatTime.js","components/EditWater/EditWater.styled.js","components/EditWater/EditWater.jsx","components/Calendar/Today/Today.jsx","components/Calendar/Calendar.styled.jsx","components/MonthStatsTable/MonthStatsTable.styled.jsx","components/MonthStatsTable/MonthStatsTable.jsx","components/Calendar/Calendar.jsx","pages/HomePage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport color from \"../../common/Variables\";\n\nexport const DailyModal = styled.div`\n  box-sizing: border-box;\n  width: 292px;\n  height: 188px;\n  background-color: ${color.whitePrimary};\n  display: inline-flex;\n  padding: 24px 16px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  border-radius: 10px;\n  box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.3);\n  z-index: 1;\n`;\n\nexport const CloseBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 16px;\n  height: 16px;\n  background-color: #fff;\n  position: absolute;\n  right: 16px;\n`;\n\nexport const Date = styled.p`\n  color: ${color.bluePrimary};\n  line-height: 1.25;\n`;\n\nexport const Value = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.33;\n  color: ${color.bluePrimary};\n`;\n","import icons from \"../../common/symbol-defs.svg\";\nimport { CloseBtn, DailyModal, Date, Value } from \"./DaysGeneralStats.styled\";\n\nexport default function DaysGeneralStats({\n  onClose,\n  day,\n  dailyNorm,\n  mounth,\n  servingOfWater,\n  WaterRate,\n}) {\n  const nameMount = mounth || \"\";\n  const monthName = nameMount.split(\",\")[0].trim();\n\n  return (\n    <div>\n      <DailyModal>\n        {\" \"}\n        <Date>\n          {day}, {monthName}\n        </Date>\n        <CloseBtn onClick={onClose}>\n          {\" \"}\n          <svg width={12} height={12} stroke=\"#407BFF\">\n            <use href={`${icons}#icon-cross`} />\n          </svg>\n        </CloseBtn>\n        <p>\n          Daily norma:<Value> {WaterRate} L</Value>\n        </p>\n        <p>\n          Fulfillment of the daily norm:<Value> {dailyNorm}%</Value>\n        </p>\n        <p>\n          How many servings of water:<Value> {servingOfWater}</Value>\n        </p>\n      </DailyModal>\n    </div>\n  );\n}\n","import styled from 'styled-components';\nimport variables from 'common/Variables';\n\nimport MobileBubbles from '../../images/MobileBubblesBg.jpg';\nimport MobileBubbles2 from '../../images/MobileBubblesBg@2x.jpg';\nimport TabletBubbles from '../../images/TabletBubblesBg.jpg';\nimport TabletBubbles2 from '../../images/TabletBubblesBg@2x.jpg';\nimport DesktopBubbles from '../../images/DesktopBubblesBg.jpg';\nimport DesktopBubbles2 from '../../images/DesktopBubblesBg@2x.jpg';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n\n  img {\n    margin: 0 auto;\n    margin-bottom: 16px;\n\n    @media screen and (min-width: 1440px) {\n      margin-bottom: 24px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 50%;\n    img {\n      height: 548px;\n      object-fit: cover;\n    }\n  }\n`;\n\nexport const NormaContainer = styled.div`\n  display: inline-block;\n  padding: 8px 20px;\n  margin-bottom: 8px;\n  border-radius: 10px;\n  background-color: ${variables.whitePrimary};\n  box-shadow: 0px 4px 8px 0px rgba(158, 187, 255, 0.12);\n  border: 1px solid ${variables.secondaryLightGray};\n\n  @media only screen and (min-width: 768px) {\n    justify-content: center;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    position: absolute;\n    top: 30px;\n    left: 0;\n  }\n`;\n\nexport const NormaTitle = styled.h2`\n  font-size: 18px;\n  margin-bottom: 12px;\n  color: ${variables.blackPrimary};\n  font-weight: 500;\n  line-height: 1.33;\n`;\n\nexport const DailyNormaWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const NormaP = styled.p`\n  font-size: 22px;\n  font-weight: 700;\n  color: ${variables.bluePrimary};\n  line-height: 1;\n\n  @media only screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Image = styled.img`\n  margin: 0px auto 16px;\n`;\n\nexport const NormaButton = styled.button`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  color: ${variables.editColorButton};\n  background-color: transparent;\n\n  &:hover {\n    color: ${variables.secondaryLightOrange};\n    transition: color 250ms ease-in-out;\n  }\n`;\nexport const ProgressContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  button {\n    width: 100%;\n    padding-top: 6px;\n    padding-bottom: 6px;\n    @media screen and (min-width: 768px) {\n      width: 336px;\n      padding-top: 10px;\n      padding-bottom: 10px;\n    }\n    @media screen and (min-width: 1440px) {\n      width: 178px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 12px;\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 23px;\n  }\n`;\n\nexport const WaterProgress = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 19px;\n  width: 100%;\n  p {\n    color: ${variables.bluePrimary};\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 1.33;\n  }\n  @media screen and (min-width: 768px) {\n    width: 356px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 391px;\n  }\n`;\n\nexport const WaterMeter = styled.div`\n  position: relative;\n  height: 8px;\n  background-color: ${variables.secondaryGray};\n  width: calc(100% - 31px);\n  padding: 0 20px 0 11px;\n  border-radius: 10px;\n  margin: 0 auto;\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: ${({ percentage }) => `calc(${percentage}%)`};\n    transform: translate(-50%, -50%);\n    width: 14px;\n    height: 14px;\n    background-color: ${variables.whitePrimary};\n    border: 1px solid ${variables.bluePrimary};\n    border-radius: 100%;\n  }\n  div {\n    position: absolute;\n    border-radius: 10px;\n\n    top: 0;\n    left: 0;\n\n    width: ${({ percentage }) => `${percentage}%`};\n    height: 100%;\n    background: ${variables.secondaryLightBlue};\n  }\n`;\n\nexport const WaterInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  span {\n    color: ${variables.bluePrimary};\n    font-size: 12px;\n    line-height: 1.33;\n    position: relative;\n    &::before {\n      content: '';\n      display: block;\n      width: 1px;\n      height: 8px;\n      background-color: ${variables.secondaryGray};\n      position: absolute;\n      top: -12px;\n      left: 50%;\n      transform: translate(-50%);\n    }\n    &:first-child {\n      margin-left: 11px;\n    }\n    &:nth-child(2) {\n      font-size: 16px;\n      line-height: 1.25;\n      font-weight: 500;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n`;\nexport const AddWaterButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 10px;\n  fill: none;\n  stroke: ${variables.whitePrimary};\n\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  text-align: center;\n  line-height: 1.33;\n  background-color: ${variables.bluePrimary};\n  color: ${variables.whitePrimary};\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n  &:hover {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n\n    transition: box-shadow 250ms ease-in-out;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 178px;\n  }\n`;\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  padding-top: 24px;\n\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n    padding-top: 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 32px;\n    padding-top: 20px;\n  }\n`;\n\nexport const LayoutMainContainer = styled.div`\n  justify-content: space-between;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  height: 100%;\n  background-size: 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n\n  background-image: image-set(\n    url(${MobileBubbles}) 1x,\n    url(${MobileBubbles2}) 2x\n  );\n  background-repeat: no-repeat;\n  background-position: top;\n\n  @media screen and (min-width: 768px) {\n    background-image: image-set(\n      url(${TabletBubbles}) 1x,\n      url(${TabletBubbles2}) 2x\n    );\n\n    background-repeat: no-repeat;\n    background-position: center;\n    align-items: start;\n  }\n\n  @media screen and (min-width: 1440px) {\n    background-image: image-set(\n      url(${DesktopBubbles}) 1x,\n      url(${DesktopBubbles2}) 2x\n    );\n\n    background-repeat: no-repeat;\n    background-position: center;\n    align-items: end;\n  }\n`;\n","import styled from 'styled-components';\n\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  height: 540px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  padding: 24px 12px;\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 504px;\n    borderradius: 10px;\n    padding: 32px 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    height: 504px;\n  }\n`;\nexport const ButtonSave = styled.button`\n  width: 256px;\n  height: 36px;\n  padding: 8px 30px;\n  border-radius: 10px;\n  background: #407bff;\n  color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  &:hover {\n    box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    padding: 10px 30px;\n  }\n`;\nexport const ButtonCount = styled.button`\n  display: flex;\n  padding: 10px;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 30px;\n  border: 1px solid #9ebbff;\n  background: #fff;\n  box-shadow: 0px 2px 4px 0px rgba(64, 123, 255, 0.2);\n`;\nexport const ButtonClose = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  background-color: #fff;\n  transition: transform 0.3s ease;\n  &:hover {\n    transform: scale(1.3);\n    cursor: pointer;\n  }\n`;\nexport const BlockTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\nexport const BlockTitle = styled.h3`\n  color: #2f2f2f;\n  font-size: 26px;\n  line-height: 1.23;\n`;\n\nexport const BtnCounter = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 92px;\n  height: 36px;\n  padding: 6px 10px;\n  border-radius: 40px;\n  background: #d7e3ff;\n  color: #407bff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n`;\nexport const BlockCount = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 24px;\n`;\nexport const ValueP = styled.p`\n  color: #2f2f2f;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  margin-bottom: 16px;\n`;\nexport const AmountP = styled.p`\n  color: #2f2f2f;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  margin-bottom: 12px;\n`;\n\nexport const SelectTime = styled.select`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  width: 120px;\n  height: 44px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  margin-bottom: 24px;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const InputStyle = styled.input`\n  width: 120px;\n  height: 44px;\n  margin-bottom: 24px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const CounterBottom = styled.p`\n  width: 72px;\n  height: 24px;\n  color: #407bff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 16px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    margin-left: unset;\n    margin-right: unset;\n    margin-bottom: 0;\n  }\n`;\nexport const CountSaveBtnBottom = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 24px;\n    justify-content: flex-end;\n    align-items: center;\n  }\n`;\n","export const selectAddWaterVolume = state => state.water.data ;\n\nexport const selectTakeWaterHistory = state => state.water.history ;\n\nexport const selectStageWater = state => state.water ;\n\nexport const selectMounthWater = state => state.water.mounthHistory;\n","import {\n  ButtonClose,\n  ButtonCount,\n  InputStyle,\n  BlockTop,\n  BlockTitle,\n  BlockCount,\n  BtnCounter,\n  ValueP,\n  AmountP,\n  SelectTime,\n  CounterBottom,\n  ButtonSave,\n  CountSaveBtnBottom,\n  Wrapper,\n} from './AddWater.styled';\nimport {\n  decrease,\n  generateTimeOptions,\n  handleUpdateCount,\n  setInitialTime,\n} from '../Utils/utils';\nimport React, { useEffect, useState } from 'react';\nimport icons from '../../common/symbol-defs.svg';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addWaterVolume } from '../../redux/water/operations';\nimport { selectAddWaterVolume } from '../../redux/water/selector';\nimport { toast } from 'react-toastify';\n\nfunction AddWater({ closeModal }) {\n  const [count, setCount] = useState(0);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedTime, setSelectedTime] = useState(0);\n\n  const dispatch = useDispatch();\n  const waterData = useSelector(selectAddWaterVolume);\n\n  const handleDecrease = () => {\n    decrease(count, setCount);\n  };\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const handleUpdateCountWrapper = () => {\n    handleUpdateCount(inputValue, setCount, setInputValue);\n  };\n\n  const handleInputBlur = () => {\n    handleUpdateCountWrapper();\n  };\n\n  useEffect(() => {\n    setInitialTime(setSelectedTime);\n  }, []);\n\n  const handleTimeChange = e => {\n    setSelectedTime(parseInt(e.target.value, 10));\n  };\n\n  const handleSave = () => {\n    if (count === 0)\n      return toast.info(\n        'Amount of water- cannot be zero please enter a value!'\n      );\n\n    const hours = Math.floor(selectedTime / 60);\n    const minutes = selectedTime % 60;\n    const currentDate = new Date();\n    currentDate.setHours(hours, minutes, 0, 0);\n\n    const data = {\n      waterVolume: count,\n      date: currentDate.toISOString(),\n    };\n    toast.success('Data saved 👍');\n    dispatch(addWaterVolume(data));\n    closeModal();\n  };\n\n  return (\n    <Wrapper>\n      <BlockTop>\n        <BlockTitle> Add water</BlockTitle>\n        <ButtonClose onClick={closeModal}>\n          {' '}\n          <svg width={12} height={12} stroke=\"#407BFF\">\n            <use href={`${icons}#icon-cross`} />\n          </svg>\n        </ButtonClose>\n      </BlockTop>\n\n      <ValueP>Choose a value:</ValueP>\n      <AmountP>Amount of water:</AmountP>\n\n      <BlockCount>\n        <ButtonCount onClick={handleDecrease}>\n          <svg width={24} height={24} fill=\"#407BFF\">\n            <use href={`${icons}#icon-minus`} />\n          </svg>\n        </ButtonCount>\n        <BtnCounter>{count}ml</BtnCounter>\n        <ButtonCount onClick={() => setCount(count + 50)}>\n          <svg width={24} height={24} fill=\"#407BFF\">\n            <use href={`${icons}#icon-plus`} />\n          </svg>\n        </ButtonCount>\n      </BlockCount>\n\n      <AmountP>Recording time:</AmountP>\n\n      <SelectTime value={selectedTime} onChange={handleTimeChange}>\n        {generateTimeOptions()}\n      </SelectTime>\n\n      <ValueP>Enter the value of the water used:</ValueP>\n      <InputStyle\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        placeholder={count}\n      />\n      <CountSaveBtnBottom>\n        <CounterBottom>{waterData.waterVolume}ml</CounterBottom>\n        <ButtonSave type=\"button\" onClick={handleSave}>\n          Save\n        </ButtonSave>\n      </CountSaveBtnBottom>\n    </Wrapper>\n  );\n}\n\nexport default AddWater;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  height: 816px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  padding: 24px 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 676px;\n    border-radius: 10px;\n    padding: 32px 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    height: 712px;\n  }\n`;\n\nexport const BlockTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nexport const BlockTitle = styled.h3`\n  color: #2f2f2f;\n  font-size: 26px;\n  line-height: 1.23;\n`;\n\nexport const BlockFormula = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 24px;\n  }\n`;\n\nexport const Formula = styled.p`\n  color: var(--Primery-Color-Black, #2f2f2f);\n\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.25;\n`;\nexport const FormulaSpan = styled.span`\n  color: var(--Primery-Color-Blue, #407bff);\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.33;\n  margin-left: 4px;\n`;\n\nexport const Description = styled.p`\n  border-radius: 10px;\n  outline: 1px solid #d7e3ff;\n  padding: 10px;\n  color: #8f8f8f;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 16px;\n  /* width: 256px;\n  height: 100px; */\n  margin-bottom: 24px;\n`;\n\nexport const DescriptionSpan = styled.span`\n  color: var(--Primery-Color-Blue, #407bff);\n\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.33;\n`;\n\nexport const SecondTitle = styled.p`\n  color: #2f2f2f;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  margin-bottom: 16px;\n`;\n\nexport const ContainerGender = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n  width: 176px;\n  height: 20px;\n  label:first-child {\n    margin-right: 24px;\n  }\n  input:first-child {\n    margin-right: 8px;\n  }\n`;\n\nexport const TextP = styled.p`\n  color: var(--Primery-Color-Black, #2f2f2f);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.25;\n  margin-bottom: 8px;\n`;\n\nexport const BlockAmount = styled.div`\n  display: flex;\n  gap: 6px;\n  margin-bottom: 24px;\n  align-items: center;\n  @media screen and (min-width: 768px) {\n    align-items: unset;\n  }\n`;\nexport const BlockAmountText = styled.div`\n  color: var(--Primery-Color-Black, #2f2f2f);\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.25;\n  width: 190px;\n\n  @media screen and (min-width: 768px) {\n    width: 328px;\n  }\n`;\n\nexport const AmountWater = styled.p`\n  color: var(--Primery-Color-Blue, #407bff);\n\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.33;\n`;\n\nexport const WrapAmount = styled.span`\n  width: 57px;\n  height: 24px;\n`;\n\nexport const InputStyle = styled.input`\n  width: 256px;\n  height: 44px;\n  margin-bottom: 16px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n \n  outline: none;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const InputGender = styled.input`\n  display: none;\n`;\nexport const LabelGender = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ButtonSave = styled.button`\n  width: 256px;\n  height: 36px;\n  padding: 8px 30px;\n  border-radius: 10px;\n  background: #407bff;\n  color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  margin-top: 8px;\n  &:hover {\n    box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    padding: 10px 30px;\n  }\n`;\n\nexport const ButtonSaveWrap = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const ButtonClose = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  background-color: #fff;\n  transition: transform 0.3s ease;\n  &:hover {\n    transform: scale(1.3);\n    cursor: pointer;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport icons from '../../common/symbol-defs.svg';\nimport {\n  AmountWater,\n  BlockAmount,\n  BlockAmountText,\n  BlockFormula,\n  BlockTitle,\n  BlockTop,\n  ButtonClose,\n  ButtonSave,\n  ButtonSaveWrap,\n  ContainerGender,\n  Description,\n  DescriptionSpan,\n  Formula,\n  FormulaSpan,\n  InputGender,\n  InputStyle,\n  LabelGender,\n  SecondTitle,\n  TextP,\n  WrapAmount,\n  Wrapper,\n} from './EditDailyNorma.styled';\nimport sprite from '../../common/symbol-defs.svg';\nimport { toast } from 'react-toastify';\n\nfunction EditDailyNorma({ closeModal }) {\n  const [gender, setGender] = useState('girl');\n  const [inputValueK, setInputValueK] = useState('');\n  const [inputValueT, setInputValueT] = useState('');\n  const [calculatedResult, setCalculatedResult] = useState(null);\n  const [isValidInputK, setIsValidInputK] = useState(true);\n  const [isValidInputT, setIsValidInputT] = useState(true);\n  const handleChange = event => {\n    setGender(event.target.value);\n  };\n\n  const handleInputChange = (event, setInputValue, setIsValidInput) => {\n    if (/^\\d*$/.test(event.target.value)) {\n      setInputValue(event.target.value);\n      setIsValidInput(true);\n    } else {\n      setIsValidInput(false);\n      toast.error('please enter the numbers');\n    }\n  };\n\n  const handleInputChangeKilo = event => {\n    handleInputChange(event, setInputValueK, setIsValidInputK);\n  };\n\n  const handleInputChangeTime = event => {\n    handleInputChange(event, setInputValueT, setIsValidInputT);\n  };\n\n  const errorBorderStyleK = {\n    border: '1px solid #EF5050',\n  };\n  const errorBorderStyleT = {\n    border: '1px solid #EF5050',\n  };\n\n  useEffect(() => {\n    const waterCalc = () => {\n      if (inputValueK && inputValueT && gender) {\n        let result;\n        if (gender === 'girl') {\n          result = inputValueK * 0.03 + inputValueT * 0.4;\n        } else {\n          result = inputValueK * 0.04 + inputValueT * 0.6;\n        }\n        result = result.toFixed(1);\n\n        setCalculatedResult(result);\n      } else {\n        setCalculatedResult(null);\n      }\n    };\n    waterCalc();\n  }, [inputValueK, inputValueT, gender]);\n\n  return (\n    <Wrapper>\n      <BlockTop>\n        <BlockTitle>My daily norma</BlockTitle>\n        <ButtonClose onClick={closeModal}>\n          <svg width={12} height={12} stroke=\"#407BFF\">\n            <use href={`${icons}#icon-cross`} />\n          </svg>\n        </ButtonClose>\n      </BlockTop>\n\n      <BlockFormula>\n        <li>\n          <Formula>\n            For girl:<FormulaSpan>V=(M*0,03) + (T*0,4)</FormulaSpan>{' '}\n          </Formula>\n        </li>\n        <li>\n          <Formula>\n            For man:<FormulaSpan>V=(M*0,04) + (T*0,6)</FormulaSpan>\n          </Formula>\n        </li>\n      </BlockFormula>\n\n      <Description>\n        <DescriptionSpan>* </DescriptionSpan>V is the volume of the water norm\n        in liters per day, M is your body weight, T is the time of active\n        sports, or another type of activity commensurate in terms of loads (in\n        the absence of these, you must set 0)\n      </Description>\n\n      <SecondTitle>Calculate your rate:</SecondTitle>\n\n      <ContainerGender>\n        <LabelGender htmlFor=\"girl\">\n          {gender === 'girl' ? (\n            <svg width={14} height={14}>\n              <use href={`${sprite}#radio-btn-active`} />\n            </svg>\n          ) : (\n            <svg width={14} height={14}>\n              <use href={`${sprite}#radio-btn`} />\n            </svg>\n          )}\n\n          <InputGender\n            id=\"girl\"\n            type=\"radio\"\n            name=\"gender\"\n            value=\"girl\"\n            checked={gender === 'girl'}\n            onChange={handleChange}\n          />\n          <span>For girl</span>\n        </LabelGender>\n\n        <LabelGender htmlFor=\"man\">\n          {gender === 'girl' ? (\n            <svg width={14} height={14}>\n              <use href={`${sprite}#radio-btn`} />\n            </svg>\n          ) : (\n            <svg width={14} height={14}>\n              <use href={`${sprite}#radio-btn-active`} />\n            </svg>\n          )}\n          <InputGender\n            id=\"man\"\n            type=\"radio\"\n            name=\"gender\"\n            value=\"man\"\n            checked={gender === 'man'}\n            onChange={handleChange}\n          />\n          <span>For man</span>\n        </LabelGender>\n      </ContainerGender>\n\n      <TextP>Your weight in kilograms:</TextP>\n\n      <InputStyle\n        type=\"text\"\n        value={inputValueK}\n        onChange={handleInputChangeKilo}\n        placeholder=\"0\"\n        style={isValidInputK ? {} : errorBorderStyleK}\n      />\n\n      <TextP>\n        The time of active participation in sports or other activities with a\n        high physical. load:\n      </TextP>\n\n      <InputStyle\n        type=\"text\"\n        value={inputValueT}\n        onChange={handleInputChangeTime}\n        placeholder=\"0\"\n        style={isValidInputT ? {} : errorBorderStyleT}\n      />\n      <BlockAmount>\n        <BlockAmountText>\n          The required amount of water in liters per day:\n        </BlockAmountText>\n        <WrapAmount>\n          {calculatedResult && <AmountWater>{calculatedResult} L</AmountWater>}\n        </WrapAmount>\n      </BlockAmount>\n      <SecondTitle>Write down how much water you will drink:</SecondTitle>\n      <InputStyle\n        type=\"text\"\n        // value={inputValue}\n        // onChange=''\n        // onBlur={handleInputBlur}\n        placeholder=\"0\"\n        // isvalid={isValidInput}\n      />\n      <ButtonSaveWrap>\n        <ButtonSave type=\"button\">Save</ButtonSave>\n      </ButtonSaveWrap>\n    </Wrapper>\n  );\n}\n\nexport default EditDailyNorma;\n","import {\n  Container,\n  NormaContainer,\n  NormaTitle,\n  DailyNormaWrapper,\n  NormaP,\n  NormaButton,\n  ProgressContainer,\n  WaterProgress,\n  WaterInfo,\n  WaterMeter,\n  AddWaterButton,\n} from './DailyNorma.styled';\nimport sprite from '../../common/symbol-defs.svg';\n\nimport MobileBottle from '../../images/MobileBottle.png';\nimport MobileBottle2 from '../../images/MobileBottle@2x.png';\nimport TabletBottle from '../../images/TabletHomeBottle.png';\nimport TabletBottle2 from '../../images/TabletHomeBottle@2x.png';\nimport DesktopBottle from '../../images/DesktopHomeBottle.png';\nimport DesktopBottle2 from '../../images/DesktopHomeBottle@2x.png';\nimport MainModal from 'components/MainModal/MainModal';\nimport ModalAddWater from 'components/AddWater/AddWater';\nimport { useEffect, useState } from 'react';\nimport { modalScrollOff } from 'components/Utils/utils';\nimport { useSelector } from 'react-redux';\nimport { selectStageWater } from '../../redux/water/selector';\nimport { toast } from 'react-toastify';\nimport { selectIsUser } from '../../redux/auth/selectorsAuth';\nimport EditDailyNorma from 'components/EditDailyNorma/EditDailyNorma';\n\nconst DailyNorma = () => {\n  const [modalActive, setModalActive] = useState(false);\n  const [modalDailyActive, setmodalDailyActive] = useState(false);\n  // const [alreadyShownToast, setAlreadyShownToast] = useState(false);\n\n  modalScrollOff(modalActive);\n\n  const { percentage } = useSelector(selectStageWater);\n  const { waterRate } = useSelector(selectIsUser);\n\n  // useEffect(() => {\n  //   if (percentage === 100 && !alreadyShownToast) {\n  //     toast.success(\n  //       'Congratulations. Daily water requirement has been reached!'\n  //     );\n  //     setAlreadyShownToast(true);\n  //   }\n  // }, [percentage, alreadyShownToast]);\n  useEffect(() => {\n    const isToastAlreadyShown =\n      localStorage.getItem('alreadyShownToast') === 'true';\n\n    if (percentage === 100 && !isToastAlreadyShown) {\n      toast.success(\n        'Congratulations. Daily water requirement has been reached!'\n      );\n      localStorage.setItem('alreadyShownToast', 'true');\n    } else if (percentage < 100 && isToastAlreadyShown) {\n      localStorage.setItem('alreadyShownToast', 'false');\n    }\n  }, [percentage]);\n\n  return (\n    <Container>\n      <NormaContainer>\n        <NormaTitle>My daily norma</NormaTitle>\n        <DailyNormaWrapper>\n          <NormaP>{waterRate / 1000} L</NormaP>\n          <NormaButton onClick={() => setmodalDailyActive(true)}>Edit</NormaButton>\n        </DailyNormaWrapper>\n      </NormaContainer>\n      <picture>\n        <source\n          media=\"(min-width: 1440px)\"\n          srcSet={`${DesktopBottle} 1x, ${DesktopBottle2} 2x`}\n          type=\"image/png\"\n        />\n        <source\n          media=\"(min-width: 768px)\"\n          srcSet={`${TabletBottle} 1x, ${TabletBottle2} 2x`}\n          type=\"image/png\"\n        />\n        <source\n          media=\"(max-width: 767px)\"\n          srcSet={`${MobileBottle} 1x, ${MobileBottle2} 2x`}\n          type=\"image/png\"\n        />\n        <img src={DesktopBottle} alt=\"bottle\" />\n      </picture>\n      <ProgressContainer>\n        <WaterProgress>\n          <p>Today</p>\n          <WaterMeter percentage={percentage}>\n            <div />\n          </WaterMeter>\n          <WaterInfo>\n            <span>0%</span>\n            <span>50%</span>\n            <span>100%</span>\n          </WaterInfo>\n        </WaterProgress>\n        <AddWaterButton onClick={() => setModalActive(true)}>\n          <svg width={24} height={24}>\n            <use href={`${sprite}#plus-circle`} />\n          </svg>\n          Add Water\n        </AddWaterButton>\n      </ProgressContainer>\n      <MainModal active={modalActive} setActive={setModalActive}>\n        <ModalAddWater closeModal={() => setModalActive(false)} />\n      </MainModal>\n      <MainModal active={modalDailyActive} setActive={setmodalDailyActive}>\n        <EditDailyNorma closeModal={() => setmodalDailyActive(false)}  />\n      </MainModal>\n    </Container>\n  );\n};\nexport default DailyNorma;\n","import variables from 'common/Variables';\nimport styled from 'styled-components';\n\nexport const TodayContainer = styled.div`\n  width: fit-content;\n`;\n\nexport const TodayHeader = styled.h2`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.25;\n  color: ${variables.blackPrimary};\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    line-height: 1.23;\n  }\n`;\n\nexport const TableWrapper = styled.div`\n  height: 220px;\n  overflow-y: auto;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    height: 228px;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 212px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${variables.secondaryLightBlue};\n    border-radius: 2px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: ${variables.secondaryGray};\n    width: 1px;\n  }\n`;\n\nexport const TodayTable = styled.table`\n  border-collapse: collapse;\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 534px;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  border-bottom: 1px solid ${variables.secondaryGray};\n  margin-bottom: 12px;\n\n  & Button {\n    background-color: transparent;\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  justify-items: center;\n\n  @media screen and (min-width: 768px) {\n    svg {\n      width: 36px;\n      height: 36px;\n    }\n  }\n`;\n\nexport const TodayTableData = styled.td`\n  text-align: center;\n  color: ${variables.bluePrimary};\n  font-family: Roboto;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n`;\n\nexport const TextTableData = styled.td`\n  padding: 12px;\n  text-align: left;\n  color: ${variables.bluePrimary};\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n`;\n\nexport const TimeTableData = styled.td`\n  padding-right: 35px;\n  text-align: left;\n  color: ${variables.blackPrimary};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n\n  @media screen and (min-width: 768px) {\n    padding-right: 390px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-right: 278px;\n  }\n`;\n\nexport const Button = styled.button`\n  position: relative;\n  fill: none;\n  stroke: ${variables.secondaryLightBlue};\n  margin: 4px;\n  cursor: pointer;\n\n  &::after {\n    position: absolute;\n    content: '';\n    display: block;\n    width: 100%;\n    height: 1px;\n    border-radius: 1px;\n    bottom: 0px;\n    background-color: transparent;\n    transition: background-color 250ms ease-in-out;\n  }\n\n  &:hover {\n    &::after {\n      background-color: ${variables.secondaryLightBlue};\n    }\n  }\n`;\n\nexport const TrashButton = styled(Button)`\n  stroke: ${variables.secondaryRed};\n\n  &:hover {\n    &::after {\n      background-color: ${variables.secondaryRed};\n    }\n  }\n`;\nexport const AddWaterButton = styled.button`\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 20px;\n  padding: 12px 8px;\n  color: ${variables.bluePrimary};\n  background-color: transparent;\n\n  &:hover {\n    color: ${variables.secondaryLightOrange};\n    cursor: pointer;\n    transition: color 250ms ease-in-out;\n  }\n`;\n","export const FormatTime = (isoDate) => {\n  const date = new Date(isoDate);\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const period = hours < 12 ? 'AM' : 'PM';\n\n  const formattedHours = hours < 10 ? `0${hours}` : hours;\n  const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n\n  return `${formattedHours}:${formattedMinutes} ${period}`;\n};\n","import styled from 'styled-components';\nimport variables from 'common/Variables';\n\nexport const Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 2;\n  transform: translate(-50%, -50%);\n  width: 280px;\n  height: 648px;\n  background-color: #ffffff;\n  border-radius: 10px;\n  \n  padding: 24px 12px;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 580px;\n    border-radius: 10px;\n    padding: 32px 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 592px;\n    height: 580px;\n  }\n`;\n\nexport const DataWater = styled.li`\nmargin-left: 12px;\ncolor: ${variables.bluePrimary};\nfont-size: 18px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 1.33; \n\n`\n\nexport const DataTime = styled.li`\nmargin-left: 16px;\ncolor: var(--primery-color-black, #2f2f2f);\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 2; \n\n`\n\nexport const ButtonSave = styled.button`\n  width: 256px;\n  height: 36px;\n  padding: 8px 30px;\n  border-radius: 10px;\n  background: #407bff;\n  color: #fff;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  &:hover {\n    box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n    cursor: pointer;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n    padding: 10px 30px;\n  }\n`;\nexport const ButtonCount = styled.button`\n  display: flex;\n  padding: 10px;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 30px;\n  border: 1px solid #9ebbff;\n  background: #fff;\n  box-shadow: 0px 2px 4px 0px rgba(64, 123, 255, 0.2);\n`;\nexport const ButtonClose = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  background-color: #fff;\n  transition: transform 0.3s ease;\n  &:hover {\n    transform: scale(1.3);\n    cursor: pointer;\n  }\n`;\nexport const BlockTop = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 24px;\n`;\nexport const BlockTitle = styled.h3`\n  color: #2f2f2f;\n  font-size: 26px;\n  line-height: 1.23;\n`;\n\nexport const BlockWaterTime = styled.ul`\nwidth: 256px;\nheight: 52px;\ndisplay: flex;\npadding: 8px 24px;\nalign-items: center;\nborder-radius: 10px;\nbackground:  #ECF2FF;\nmargin-bottom: 24px;\n`\n\n\n\nexport const BtnCounter = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 92px;\n  height: 36px;\n  padding: 6px 10px;\n  border-radius: 40px;\n  background: #d7e3ff;\n  color: #407bff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n`;\nexport const BlockCount = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 24px;\n`;\nexport const ValueP = styled.p`\n  color: #2f2f2f;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  margin-bottom: 16px;\n`;\nexport const AmountP = styled.p`\n  color: #2f2f2f;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  margin-bottom: 12px;\n`;\n\nexport const SelectTime = styled.select`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  width: 256px;\n  height: 44px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  margin-bottom: 24px;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const InputStyle = styled.input`\n  width: 256px;\n  height: 44px;\n  margin-bottom: 24px;\n  display: flex;\n  padding: 12px 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 6px;\n  border: 1px solid #d7e3ff;\n  color: #407bff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 544px;\n  }\n`;\n\nexport const CounterBottom = styled.p`\n  width: 72px;\n  height: 24px;\n  color: #407bff;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 16px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    margin-left: unset;\n    margin-right: unset;\n    margin-bottom: 0;\n  }\n`;\nexport const CountSaveBtnBottom = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 24px;\n    justify-content: flex-end;\n    align-items: center;\n  }\n`;\n","import { toast } from 'react-toastify';\nimport React, { useState, useEffect } from 'react';\nimport icons from '../../common/symbol-defs.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ButtonClose,\n  ButtonCount,\n  InputStyle,\n  BlockTop,\n  BlockTitle,\n  BlockCount,\n  BtnCounter,\n  ValueP,\n  AmountP,\n  SelectTime,\n  CounterBottom,\n  ButtonSave,\n  CountSaveBtnBottom,\n  BlockWaterTime,\n  \n  Wrapper,\n  \n  DataWater,\n  DataTime,\n} from './EditWater.styled';\nimport {\n  decrease,\n  generateTimeOptions,\n  handleUpdateCount,\n  setInitialTime,\n} from 'components/Utils/utils';\nimport { addWaterVolume } from '../../redux/water/operations';\nimport { selectAddWaterVolume } from '../../redux/water/selector';\nimport { FormatTime } from '../Calendar/FormatTime/FormatTime';\n\n\n\n\n\nexport default function EditWater({ closeModal}) {\n  const [count, setCount] = useState(0);\n  const [inputValue, setInputValue] = useState('');\n  const [selectedTime, setSelectedTime] = useState(0);\n\n  const dispatch = useDispatch();\n  const waterData = useSelector(selectAddWaterVolume);\n\n\n\n\n\n  const handleDecrease = () => {\n    decrease(count, setCount);\n  };\n\n\n\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const handleUpdateCountWrapper = () => {\n    handleUpdateCount(inputValue, setCount, setInputValue);\n  };\n\n  const handleInputBlur = () => {\n    handleUpdateCountWrapper();\n  };\n\n  useEffect(() => {\n    setInitialTime(setSelectedTime);\n  }, []);\n\n  const handleTimeChange = e => {\n    setSelectedTime(parseInt(e.target.value, 10));\n  };\n\n  const handleSave = () => {\n    if (count === 0)\n      return toast.info(\n        'Amount of water- cannot be zero please enter a value!'\n      );\n    const hours = Math.floor(selectedTime / 60);\n    const minutes = selectedTime % 60;\n    const currentDate = new Date();\n    currentDate.setHours(hours, minutes, 0, 0);\n\n    const data = {\n      waterVolume: count,\n      date: currentDate.toISOString(),\n    };\n    toast.success('Data saved 👍');\n    dispatch(addWaterVolume(data));\n    closeModal();\n  };\n\n\n\n  return (\n    <Wrapper>\n      <BlockTop>\n        <BlockTitle>Edit the entered amount of water</BlockTitle>\n        <ButtonClose onClick={closeModal}>\n          {' '}\n          <svg width={12} height={12} stroke=\"#407BFF\">\n            <use href={`${icons}#icon-cross`} />\n          </svg>\n        </ButtonClose>\n      </BlockTop>\n      <BlockWaterTime>\n        <svg width={36} height={36} fill=\"#407BFF\">\n          <use href={`${icons}#icon-glass`} />\n        </svg>\n        <DataWater>{waterData.waterVolume} ml</DataWater>\n        <DataTime>{FormatTime(waterData.date)}</DataTime>\n      \n      </BlockWaterTime>\n      <ValueP>Correct entered data:</ValueP>\n      <AmountP>Amount of water:</AmountP>\n\n      <BlockCount>\n        <ButtonCount onClick={handleDecrease}>\n          <svg width={24} height={24} fill=\"#407BFF\">\n            <use href={`${icons}#icon-minus`} />\n          </svg>\n        </ButtonCount>\n        <BtnCounter>{count}ml</BtnCounter>\n        <ButtonCount onClick={() => setCount(count + 50)}>\n          <svg width={24} height={24} fill=\"#407BFF\">\n            <use href={`${icons}#icon-plus`} />\n          </svg>\n        </ButtonCount>\n      </BlockCount>\n\n      <AmountP>Recording time:</AmountP>\n\n      <SelectTime value={selectedTime} onChange={handleTimeChange}>\n        {generateTimeOptions()}\n      </SelectTime>\n\n      <ValueP>Enter the value of the water used:</ValueP>\n      <InputStyle\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n        placeholder=\"50\"\n      />\n      <CountSaveBtnBottom>\n        <CounterBottom>{waterData.waterVolume}ml</CounterBottom>\n        <ButtonSave type=\"button\" onClick={handleSave}>\n          Save\n        </ButtonSave>\n      </CountSaveBtnBottom>\n    </Wrapper>\n  );\n}\n","import { useState } from \"react\";\nimport sprite from \"../../../common/symbol-defs.svg\";\nimport {\n  TodayContainer,\n  TodayHeader,\n  TableWrapper,\n  TodayTable,\n  TableRow,\n  TodayTableData,\n  ImageWrapper,\n  Button,\n  TrashButton,\n  TextTableData,\n  TimeTableData,\n  AddWaterButton,\n} from \"./Today.styled\";\nimport React, { useEffect } from \"react\";\nimport { modalScrollOff } from \"components/Utils/utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchWaterDataToday } from \"../../../redux/water/operations\";\nimport { FormatTime } from \"../FormatTime/FormatTime\";\nimport { selectTakeWaterHistory } from \"../../../redux/water/selector\";\nimport MainModal from \"components/MainModal/MainModal\";\nimport ModalAddWater from \"components/AddWater/AddWater\";\nimport EditWater from \"components/EditWater/EditWater\";\n\nconst Today = () => {\n  const [modalActive, setModalActive] = useState(false);\n  const [modalEditActive, setModalEditActive] = useState(false);\n  modalScrollOff(modalActive);\n\n  const waterData = useSelector(selectTakeWaterHistory);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await dispatch(fetchWaterDataToday());\n      } catch (error) {\n        console.error(\"Error getting water data in useEffect:\", error);\n      }\n    };\n\n    fetchData();\n  }, [dispatch]);\n\n  return (\n    <>\n      <TodayContainer>\n        <TodayHeader>Today</TodayHeader>\n        <TableWrapper>\n          <TodayTable>\n            <tbody>\n              {waterData.map((waterRecord) => (\n                <TableRow key={waterRecord._id}>\n                  <TodayTableData>\n                    <ImageWrapper>\n                      <svg width={26} height={26}>\n                        <use href={`${sprite}#cup`}></use>\n                      </svg>\n                    </ImageWrapper>\n                  </TodayTableData>\n\n                  <TextTableData>{waterRecord.waterVolume} ml</TextTableData>\n                  <TimeTableData>{FormatTime(waterRecord.date)}</TimeTableData>\n\n                  <TodayTableData>\n                    <Button onClick={() => setModalEditActive(true)}>\n                      <svg width={16} height={16}>\n                        <use href={`${sprite}#pencil-square`}></use>\n                      </svg>\n                    </Button>\n                  </TodayTableData>\n                  <TodayTableData>\n                    <TrashButton>\n                      <svg width={16} height={16}>\n                        <use href={`${sprite}#trash-can`}></use>\n                      </svg>\n                    </TrashButton>\n                  </TodayTableData>\n                </TableRow>\n              ))}\n            </tbody>\n          </TodayTable>\n          <AddWaterButton onClick={() => setModalActive(true)}>\n            +Add water\n          </AddWaterButton>\n        </TableWrapper>\n      </TodayContainer>\n\n      <MainModal active={modalActive} setActive={setModalActive}>\n        <ModalAddWater closeModal={() => setModalActive(false)} />\n      </MainModal>\n      <MainModal active={modalEditActive} setActive={setModalEditActive}>\n        <EditWater closeModal={() => setModalEditActive(false)} />\n      </MainModal>\n    </>\n  );\n};\n\nexport default Today;\n\n// added space for check\n","import variables from 'common/Variables';\nimport styled from 'styled-components';\n\nexport const CalendarWrap = styled.div`\n  border-radius: 10px;\n  background-color: ${variables.secondaryLightGray};\n  box-shadow: 0px 4px 14px rgba(64, 123, 255, 0.3);\n  display: flex;\n  padding: 24px 8px;\n  flex-direction: column;\n  gap: 24px;\n  width: 280px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    padding: 32px 24px;\n  }\n  @media screen and (min-width: 1440px) {\n    align-self: normal;\n    width: 50%;\n    padding: 32px 24px;\n  }\n`;\n","import variables from 'common/Variables';\nimport styled from 'styled-components';\n\nexport const DayUl = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px 26px;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px 34px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    column-gap: 22px;\n  }\n`;\n\nexport const DayLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\n\nexport const StatsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 506px;\n\n  @media screen and (min-width: 768px) {\n    height: 340px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 284px;\n  }\n`;\n\nexport const DayNumber = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n\n  border-radius: 50%;\n  background-color: ${variables.whitePrimary};\n  outline: ${variables.secondaryLightOrange} solid 1px;\n  font-size: 14px;\n  line-height: 1.28;\n\n  @media screen and (min-width: 768px) {\n    gap: 20px 34px;\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nexport const WaterPercentage = styled.span`\n  font-size: 10px;\n  font-weight: 400;\n  margin-top: 4px;\n  line-height: 1.6;\n  color: ${variables.secondaryLightBlue};\n\n  @media screen and (min-width: 768px) {\n    font-size: 13px;\n    line-height: 1.53;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 12px;\n    line-height: 1.5;\n  }\n`;\n\nexport const TodayDiv = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const CurrentMonth = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${variables.bluePrimary};\n`;\n\nexport const MonthSwipe = styled.button`\n  margin: 0px 10px;\n  background-color: rgba(0, 0, 255, 0);\n  cursor: pointer;\n`;\n\nexport const MonthName = styled.span`\n  font-size: 16px;\n  line-height: 20px;\n`;\n\nexport const MonthTitle = styled.h2`\n  color: ${variables.blackPrimary};\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.25;\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    line-height: 1.23;\n  }\n`;\n","import { useEffect, useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport sprite from \"../../common/symbol-defs.svg\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  DayUl,\r\n  DayLi,\r\n  DayNumber,\r\n  StatsWrapper,\r\n  WaterPercentage,\r\n  TodayDiv,\r\n  CurrentMonth,\r\n  MonthSwipe,\r\n  MonthName,\r\n  MonthTitle,\r\n} from \"./MonthStatsTable.styled\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { waterMonts } from \"../../redux/water/operations\";\r\nimport { selectMounthWater } from \"../../redux/water/selector\";\r\nimport DaysGeneralStats from \"components/DaysGeneralStats/DaysGeneralStats\";\r\n\r\nconst Month = () => {\r\n  const dispatch = useDispatch();\r\n  const mounthHistory = useSelector(selectMounthWater);\r\n\r\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const [data, setData] = useState([]);\r\n\r\n  const [isModalOpen, setModalOpen] = useState(\"\");\r\n\r\n  const handleButtonClick = (event) => {\r\n    const name = event.target.parentNode.tagName;\r\n    const data = event.target.parentNode.firstChild.textContent;\r\n    if (name === \"LI\") {\r\n      setModalOpen(data);\r\n      return;\r\n    }\r\n    setModalOpen(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setData(mounthHistory);\r\n  }, [mounthHistory]);\r\n\r\n  useEffect(() => {\r\n    dispatch(waterMonts(`${year}-${month}`));\r\n  }, [dispatch, month, year]);\r\n\r\n  function getDaysInMonth(month, year, data) {\r\n    const days = new Date(year, month, 0).getDate();\r\n    const arrData = [];\r\n\r\n    for (let day = 1; day <= days; day++) {\r\n      const fullDate = moment(`${year}-${month}-${day}`, \"YYYY-MM-DD\").format(\r\n        \"YYYY-MM-DD\"\r\n      );\r\n      const event = data.find((event) => event.date === fullDate);\r\n\r\n      arrData.push({\r\n        day,\r\n        dailyNormFulfillment: event ? event.dailyNormFulfillment : 0,\r\n        id: nanoid(),\r\n        servingOfWater: event ? event.servingOfWater : 0,\r\n        WaterRate: event ? event.WaterRate : 2,\r\n      });\r\n    }\r\n    return arrData;\r\n  }\r\n\r\n  const daysInMonth = getDaysInMonth(month, year, data);\r\n\r\n  const handleMonthChange = (newMonth, newYear) => {\r\n    setMonth(newMonth);\r\n    setYear(newYear);\r\n  };\r\n  const handlePrevMonthClick = () => {\r\n    const newMonth = month === 1 ? 12 : month - 1;\r\n    const newYear = month === 1 ? year - 1 : year;\r\n    handleMonthChange(newMonth, newYear);\r\n  };\r\n  const handleNextMonthClick = () => {\r\n    const newMonth = month === 12 ? 1 : month + 1;\r\n    const newYear = month === 12 ? year + 1 : year;\r\n    handleMonthChange(newMonth, newYear);\r\n  };\r\n\r\n  const getFormattedMonthName = () => {\r\n    return `${new Date(year, month - 1)\r\n      .toLocaleString(\"en-US\", { month: \"long\" })\r\n      .charAt(0)\r\n      .toUpperCase()}${new Date(year, month - 1)\r\n      .toLocaleString(\"en-US\", { month: \"long\" })\r\n      .slice(1)}, ${year}`;\r\n  };\r\n\r\n  const dataToday = getFormattedMonthName();\r\n  return (\r\n    <>\r\n      <StatsWrapper>\r\n        <TodayDiv>\r\n          <MonthTitle>Month</MonthTitle>\r\n          <CurrentMonth>\r\n            <MonthSwipe onClick={handlePrevMonthClick}>\r\n              <svg width=\"14\" height=\"14\">\r\n                <use href={`${sprite}#arrow-left`}></use>\r\n              </svg>\r\n            </MonthSwipe>\r\n            <MonthName>{dataToday}</MonthName>\r\n            <MonthSwipe\r\n              onClick={handleNextMonthClick}\r\n              disabled={\r\n                year === new Date().getFullYear() &&\r\n                month === new Date().getMonth() + 1\r\n              }\r\n            >\r\n              <svg width=\"14\" height=\"14\">\r\n                <use href={`${sprite}#arrow-right`}></use>\r\n              </svg>\r\n            </MonthSwipe>\r\n          </CurrentMonth>\r\n        </TodayDiv>\r\n        <DayUl onClick={handleButtonClick}>\r\n          {daysInMonth.map((item) => (\r\n            <DayLi key={item.id}>\r\n              <DayNumber>{item.day}</DayNumber>\r\n              <WaterPercentage>{item.dailyNormFulfillment}%</WaterPercentage>\r\n              {isModalOpen === item.day.toString() && (\r\n                <DaysGeneralStats\r\n                  onClose={() => setModalOpen(\"\")}\r\n                  day={item.day}\r\n                  dailyNorm={item.dailyNormFulfillment}\r\n                  mounth={dataToday}\r\n                  servingOfWater={item.servingOfWater}\r\n                  WaterRate={item.WaterRate}\r\n                />\r\n              )}\r\n            </DayLi>\r\n          ))}\r\n        </DayUl>\r\n      </StatsWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Month;\r\n//  onClose={() => setModalOpen(false)}\r\n","import Today from \"./Today/Today\";\nimport { CalendarWrap } from \"./Calendar.styled\";\nimport Month from \"components/MonthStatsTable/MonthStatsTable\";\n\nconst Calendar = () => {\n  return (\n    <CalendarWrap>\n      <Today />\n      <Month/>\n    </CalendarWrap>\n  );\n};\nexport default Calendar;\n","import React from 'react';\nimport DailyNorma from 'components/DailyNorma/DailyNorma';\nimport Calendar from 'components/Calendar/Calendar';\nimport { HomeContainer } from 'components/DailyNorma/DailyNorma.styled';\nimport { LayoutMainContainer } from 'components/DailyNorma/DailyNorma.styled';\n\nconst HomePage = () => {\n  return (\n    <LayoutMainContainer>\n      <div className=\"container\">\n        <HomeContainer>\n          <DailyNorma />\n          <Calendar />\n        </HomeContainer>\n      </div>\n    </LayoutMainContainer>\n  );\n};\nexport default HomePage;\n"],"names":["DailyModal","styled","div","_templateObject","_taggedTemplateLiteral","color","whitePrimary","CloseBtn","button","_templateObject2","Date","p","_templateObject3","bluePrimary","Value","span","_templateObject4","DaysGeneralStats","_ref","onClose","day","dailyNorm","mounth","servingOfWater","WaterRate","monthName","split","trim","_jsx","children","_jsxs","onClick","width","height","stroke","href","concat","icons","Container","NormaContainer","variables","secondaryLightGray","NormaTitle","h2","blackPrimary","DailyNormaWrapper","NormaP","_templateObject5","NormaButton","img","_templateObject6","_templateObject7","editColorButton","secondaryLightOrange","ProgressContainer","_templateObject8","WaterProgress","_templateObject9","WaterMeter","_templateObject10","secondaryGray","percentage","_ref2","secondaryLightBlue","WaterInfo","_templateObject11","AddWaterButton","_templateObject12","HomeContainer","_templateObject13","LayoutMainContainer","_templateObject14","MobileBubbles","MobileBubbles2","TabletBubbles","TabletBubbles2","DesktopBubbles","DesktopBubbles2","Wrapper","ButtonSave","ButtonCount","ButtonClose","BlockTop","BlockTitle","h3","BtnCounter","BlockCount","ValueP","AmountP","SelectTime","select","InputStyle","input","CounterBottom","CountSaveBtnBottom","selectAddWaterVolume","state","water","data","selectTakeWaterHistory","history","selectStageWater","selectMounthWater","mounthHistory","closeModal","count","setCount","useState","inputValue","setInputValue","selectedTime","setSelectedTime","dispatch","useDispatch","waterData","useSelector","useEffect","setInitialTime","handleDecrease","decrease","fill","value","onChange","e","parseInt","target","generateTimeOptions","type","event","onBlur","handleInputBlur","handleUpdateCount","placeholder","waterVolume","handleSave","toast","info","hours","Math","floor","minutes","currentDate","setHours","date","toISOString","success","addWaterVolume","BlockFormula","ul","Formula","FormulaSpan","Description","DescriptionSpan","SecondTitle","ContainerGender","TextP","BlockAmount","BlockAmountText","AmountWater","WrapAmount","_templateObject15","_templateObject16","InputGender","_templateObject17","LabelGender","label","_templateObject18","_templateObject19","ButtonSaveWrap","_templateObject20","_templateObject21","gender","setGender","inputValueK","setInputValueK","inputValueT","setInputValueT","calculatedResult","setCalculatedResult","isValidInputK","setIsValidInputK","isValidInputT","setIsValidInputT","handleChange","handleInputChange","setIsValidInput","test","error","waterCalc","result","toFixed","htmlFor","sprite","id","name","checked","style","border","DailyNorma","modalActive","setModalActive","modalDailyActive","setmodalDailyActive","modalScrollOff","waterRate","selectIsUser","isToastAlreadyShown","localStorage","getItem","setItem","media","srcSet","DesktopBottle","DesktopBottle2","TabletBottle","TabletBottle2","MobileBottle","MobileBottle2","src","alt","MainModal","active","setActive","ModalAddWater","EditDailyNorma","TodayContainer","TodayHeader","TableWrapper","TodayTable","table","TableRow","tr","ImageWrapper","TodayTableData","td","TextTableData","TimeTableData","Button","TrashButton","secondaryRed","FormatTime","isoDate","getHours","getMinutes","period","formattedHours","formattedMinutes","DataWater","li","DataTime","BlockWaterTime","EditWater","Today","modalEditActive","setModalEditActive","async","fetchWaterDataToday","console","fetchData","_Fragment","map","waterRecord","_id","CalendarWrap","DayUl","DayLi","StatsWrapper","DayNumber","WaterPercentage","TodayDiv","CurrentMonth","MonthSwipe","MonthName","MonthTitle","Month","month","setMonth","getMonth","year","setYear","getFullYear","setData","isModalOpen","setModalOpen","waterMonts","daysInMonth","days","getDate","arrData","fullDate","moment","format","find","push","dailyNormFulfillment","nanoid","getDaysInMonth","handleMonthChange","newMonth","newYear","dataToday","toLocaleString","charAt","toUpperCase","slice","handlePrevMonthClick","handleNextMonthClick","disabled","parentNode","tagName","firstChild","textContent","item","toString","Calendar","HomePage","className"],"sourceRoot":""}