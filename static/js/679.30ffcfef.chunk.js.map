{"version":3,"file":"static/js/679.30ffcfef.chunk.js","mappings":"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","sources":["components/SingIn/SignUp.jsx","components/SingIn/SingIn.styled.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registration } from \"../../redux/auth/authOperationApi\";\r\n\r\nimport {\r\n  H2,\r\n  SignUpLabel,\r\n  SignUpInput,\r\n  SignUpButton,\r\n  SignUpButton2,\r\n  SignUpContainer,\r\n  SignUpFormContainer,\r\n  SignUpButtonContainer,\r\n  Container,\r\n  Image,\r\n  ContainerInput,\r\n  InputPasswordSvg,\r\n  WraperInputPass,\r\n} from \"./SingIn.styled\";\r\n\r\nimport DesctopBottle from \"../../images/DesktopBottle.png\";\r\nimport sprite from \"../../../src/common/symbol-defs.svg\";\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  email: Yup.string().email(),\r\n  password: Yup.string()\r\n    .required(\"Required\")\r\n    .min(8, \"Password must be at least 8 characters\"),\r\n  RepeatPassword: Yup.string()\r\n    .required(\"Required\")\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\r\n});\r\n\r\nconst SignUp = () => {\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const togglePasswordVisibility = () => {\r\n    if (showPassword === false) {\r\n      setShowPassword(true);\r\n    }\r\n    if (showPassword === true) {\r\n      setShowPassword(false);\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <Image src={DesctopBottle} alt=\"\" />\r\n\r\n      <SignUpContainer>\r\n        <SignUpFormContainer>\r\n          <Formik\r\n            validationSchema={SignupSchema}\r\n            initialValues={{ email: \"\", password: \"\", RepeatPassword: \"\" }}\r\n            onSubmit={(values, actions) => {\r\n              const { RepeatPassword, ...dataToSubmit } = values;\r\n              dispatch(registration(dataToSubmit));\r\n              actions.resetForm(true);\r\n            }}\r\n          >\r\n            {({ errors, isSubmitting, touched }) => (\r\n              <Form>\r\n                <WraperInputPass>\r\n                  <H2>Sing Up</H2>\r\n                  <SignUpLabel>\r\n                    Enter your email\r\n                    <Field\r\n                      type=\"mail\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"E-mail\"\r\n                      as={SignUpInput}\r\n                      style={{\r\n                        borderColor:\r\n                          errors.email && touched.email ? \"red\" : null,\r\n                      }}\r\n                    />\r\n                  </SignUpLabel>\r\n                  <ContainerInput>\r\n                    <SignUpLabel>\r\n                      Enter your password\r\n                      <SignUpInput\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        style={{\r\n                          borderColor:\r\n                            errors.password && touched.password ? \"red\" : null,\r\n                        }}\r\n                      />\r\n                      {showPassword ? (\r\n                        <InputPasswordSvg\r\n                          width={16}\r\n                          height={16}\r\n                          onClick={togglePasswordVisibility}\r\n                        >\r\n                          <use href={`${sprite}#eye-open`} />\r\n                        </InputPasswordSvg>\r\n                      ) : (\r\n                        <InputPasswordSvg\r\n                          width={16}\r\n                          height={16}\r\n                          onClick={togglePasswordVisibility}\r\n                        >\r\n                          <use href={`${sprite}#eye`} />\r\n                        </InputPasswordSvg>\r\n                      )}\r\n                    </SignUpLabel>\r\n                  </ContainerInput>\r\n\r\n                  <ContainerInput>\r\n                    <SignUpLabel>\r\n                      Repeat password\r\n                      <SignUpInput\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        name=\"RepeatPassword\"\r\n                        id=\"RepeatPassword\"\r\n                        placeholder=\"Repeat password\"\r\n                        style={{\r\n                          borderColor:\r\n                            errors.RepeatPassword && touched.RepeatPassword\r\n                              ? \"red\"\r\n                              : null,\r\n                        }}\r\n                      />\r\n                      {showPassword ? (\r\n                        <InputPasswordSvg\r\n                          width={16}\r\n                          height={16}\r\n                          onClick={togglePasswordVisibility}\r\n                        >\r\n                          <use href={`${sprite}#eye-open`} />\r\n                        </InputPasswordSvg>\r\n                      ) : (\r\n                        <InputPasswordSvg\r\n                          width={16}\r\n                          height={16}\r\n                          onClick={togglePasswordVisibility}\r\n                        >\r\n                          <use href={`${sprite}#eye`} />\r\n                        </InputPasswordSvg>\r\n                      )}\r\n                    </SignUpLabel>\r\n                  </ContainerInput>\r\n                  <SignUpButtonContainer>\r\n                    <SignUpButton type=\"submit\">Sing Up</SignUpButton>\r\n                    <SignUpButton2 href=\"./Signin\">Sing In</SignUpButton2>\r\n                  </SignUpButtonContainer>\r\n                </WraperInputPass>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </SignUpFormContainer>\r\n      </SignUpContainer>\r\n    </Container>\r\n  );\r\n};\r\nexport default SignUp;\r\n","import styled from \"styled-components\";\r\nimport { Field } from \"formik\";\r\nimport PhoneBubbles from \"../../images/PhoneBubbles.jpg\";\r\nimport PhoneBubbles2x from \"../../images/PhoneBubbles2x.jpg\";\r\nimport TabletBotBut from \"../../images/TabletBotBub.jpg\";\r\nimport TabletBotBut2x from \"../../images/TabletBotBub2x.jpg\";\r\nimport DesktopBubbles from \"../../images/DesktopBubbles.jpg\";\r\nimport DesktopBubbles2x from \"../../images/DesktopBubbles2x.jpg\";\r\n\r\nexport const Container = styled.div`\r\n  display: block;\r\n\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    padding: 20px;\r\n    padding-top: 24px;\r\n    background-image: image-set(\r\n      url(${PhoneBubbles}) 1x,\r\n      url(${PhoneBubbles2x}) 2x\r\n    );\r\n    background-repeat: no-repeat;\r\n    background-position: top;\r\n    flex-direction: column-reverse;\r\n    justify-content: start;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 768px;\r\n    margin: 0 auto;\r\n    padding: 16px 32px;\r\n    padding-top: 40px;\r\n    background-image: image-set(\r\n      url(${TabletBotBut}) 1x,\r\n      url(${TabletBotBut2x}) 2x\r\n    );\r\n\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    align-items: start;  \r\n    \r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    padding: 20px;\r\n    align-items: end;\r\n    padding-top: 24px;\r\n    background-image: image-set(\r\n      url(${DesktopBubbles}) 1x,\r\n      url(${DesktopBubbles2x}) 2x\r\n    );\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 280px;\r\n  /* height: 210px; */\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: none;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 880px;\r\n    margin: 0px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const SignUpContainer = styled.div`\r\n  position: relative;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    \r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    margin-right: 216px;\r\n  }\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n  font-size: 26px;\r\n  margin-bottom: 16px;\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 384px;\r\n  }\r\n`;\r\n\r\nexport const SignUpLabel = styled.label`\r\n  font-size: 18px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nexport const SignUpInput = styled(Field)`\r\n  width: 280px;\r\n  height: 44px;\r\n  border: 1px solid #d7e3ff;\r\n  color: #9ebbff;\r\n  border-radius: 6px;\r\n  margin: 8px 0px 16px 0px;\r\n  font-size: 16px;\r\n  padding: 16px 8px;\r\n  outline: none;\r\n  &:active,\r\n  &:focus,\r\n  &:hover {\r\n    color: #407bff;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 336px;\r\n    height: 44px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 384px;\r\n    height: 44px;\r\n  }\r\n`;\r\n\r\nexport const SignUpButton = styled.button`\r\n  height: 36px;\r\n  color: #ffffff;\r\n  background-color: #407bff;\r\n  border-radius: 10px;\r\n  font-size: 16px;\r\n  font-family: \"Roboto\", sans-serif;\r\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\r\n\r\n  width: 280px;\r\n  height: 36px;\r\n  transition: box-shadow 0.3s ease;\r\n  &:hover {\r\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\r\n    cursor: pointer;\r\n  }\r\n\r\n  &.active {\r\n    cursor: pointer;\r\n    box-shadow: none;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    width: 336px;\r\n    height: 44px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 384px;\r\n    height: 44px;\r\n  }\r\n`;\r\n\r\nexport const SignUpButton2 = styled.a`\r\n  font-size: 16px;\r\n  font-family: \"Roboto\", sans-serif;\r\n  border: none;\r\n  background-color: none;\r\n  color: #407bff;\r\n  margin-top: 16px;\r\n  &:hover {\r\n    color: #ff9d43;\r\n  }\r\n`;\r\n\r\nexport const SignUpFormContainer = styled.div`\r\n\r\n`;\r\n\r\nexport const SignUpButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport const ContainerInput = styled.div`\r\n  position: relative;\r\n  margin-bottom: 12px;\r\n  display: inline-block;\r\n\r\n  @media screen and (min-width: 768px) {\r\n  }\r\n`;\r\n\r\nexport const InputPasswordSvg = styled.svg`\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 10px;\r\n  transform: translateY(-25%);\r\n  cursor: pointer;\r\n  stroke: #407bff;\r\n  fill: none;\r\n`;\r\n\r\nexport const WraperInputPass = styled.div`\r\n  width: 280px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 336px;\r\n  }\r\n  @media screen and (min-width: 1440px) {\r\n    width: 384px;\r\n  }\r\n`;\r\n"],"names":["SignupSchema","Yup","shape","email","password","required","min","RepeatPassword","oneOf","SignUp","dispatch","useDispatch","showPassword","setShowPassword","useState","togglePasswordVisibility","_jsxs","Container","children","_jsx","Image","src","DesctopBottle","alt","SignUpContainer","SignUpFormContainer","Formik","validationSchema","initialValues","onSubmit","values","actions","dataToSubmit","registration","resetForm","_ref","errors","isSubmitting","touched","Form","WraperInputPass","H2","SignUpLabel","Field","type","name","id","placeholder","as","SignUpInput","style","borderColor","ContainerInput","InputPasswordSvg","width","height","onClick","href","concat","sprite","SignUpButtonContainer","SignUpButton","SignUpButton2","styled","div","_templateObject","_taggedTemplateLiteral","PhoneBubbles","PhoneBubbles2x","TabletBotBut","TabletBotBut2x","DesktopBubbles","DesktopBubbles2x","img","_templateObject2","_templateObject3","h2","_templateObject4","label","_templateObject5","_templateObject6","button","_templateObject7","a","_templateObject8","_templateObject9","_templateObject10","_templateObject11","svg","_templateObject12","_templateObject13"],"sourceRoot":""}