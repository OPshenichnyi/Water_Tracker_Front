{"version":3,"file":"static/js/496.9f904576.chunk.js","mappings":"6SAaO,MAAMA,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mlCAYvBC,EACAC,EAaAC,EACAC,EAaAC,EACAC,GAaCC,EAAkBV,EAAAA,GAAOC,IAAGU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8JAW5BS,EAAKZ,EAAAA,GAAOa,GAAEC,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,2HASdY,EAAcf,EAAAA,GAAOgB,MAAKC,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,kGAO1Be,EAAQlB,EAAAA,GAAOmB,IAAGC,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,yPAgBlBkB,EAAYrB,EAAAA,GAAOsB,IAAGC,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,uHAUtBqB,EAAcxB,EAAAA,GAAOyB,MAAKC,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,gbA6B1BwB,EAAe3B,EAAAA,GAAO4B,OAAMC,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,kaAsB5B2B,EAAgB9B,EAAAA,GAAO+B,EAACC,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,wJASxB8B,EAAsBjC,EAAAA,GAAOC,IAAGiC,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,QAEhCgC,EAAwBnC,EAAAA,GAAOC,IAAGmC,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,uD,0CCjK/C,MAAMkC,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,MAAOF,EAAAA,KAAaE,UA4DtB,EAzDeC,KACb,MAAMC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,MAAC7C,EAAS,CAAA8C,SAAA,EACRC,EAAAA,EAAAA,KAAC5B,EAAK,CAAC6B,IAAKC,EAAeC,IAAI,MAE/BL,EAAAA,EAAAA,MAAClC,EAAe,CAAAmC,SAAA,EACdC,EAAAA,EAAAA,KAAClC,EAAE,CAAAiC,SAAC,aACJC,EAAAA,EAAAA,KAACb,EAAmB,CAAAY,UAClBC,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACLC,iBAAkBd,EAClBe,cAAe,CAAEZ,MAAO,GAAIa,SAAU,IACtCC,SAAUA,CAACC,EAAQC,KACjBd,GAASe,EAAAA,EAAAA,OAAMF,IACfC,EAAQE,WAAU,EAAK,EACvBb,SAEDc,IAAA,IAAC,aAAEC,GAAcD,EAAA,OAChBf,EAAAA,EAAAA,MAACiB,EAAAA,GAAI,CAAAhB,SAAA,EACHD,EAAAA,EAAAA,MAAC7B,EAAW,CAAA8B,SAAA,CAAC,oBAEXC,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CACJC,KAAK,OACLC,GAAG,QACHC,KAAK,QACLC,YAAY,SACZC,GAAI3C,QAIRoB,EAAAA,EAAAA,MAAC7B,EAAW,CAAA8B,SAAA,CAAC,uBAEXC,EAAAA,EAAAA,KAACzB,EAAS,CAAC+C,MAAO,GAAIC,OAAQ,GAAGxB,UAC/BC,EAAAA,EAAAA,KAAA,OAAKwB,KAAI,GAAAC,OAAKC,EAAAA,EAAK,aAErB1B,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CACJC,KAAK,WACLC,GAAG,WACHC,KAAK,WACLC,YAAY,WACZC,GAAI3C,QAIRoB,EAAAA,EAAAA,MAACT,EAAqB,CAAAU,SAAA,EACpBC,EAAAA,EAAAA,KAACnB,EAAY,CAACoC,KAAK,SAAQlB,SAAC,aAC5BC,EAAAA,EAAAA,KAAChB,EAAa,CAACwC,KAAK,WAAUzB,SAAC,iBAE5B,WAKL,C","sources":["pages/SigninPageStyled.jsx","pages/SigninPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\n// import PhoneBottle from '../images/PhoneBottle.png';\n// import PhoneBottle2x from '../images/PhoneBottle2x.png';\nimport PhoneBubbles from \"../images/PhoneBubbles.jpg\";\nimport PhoneBubbles2x from \"../images/PhoneBubbles2x.jpg\";\nimport TabletBotBut from \"../images/TabletBotBub.jpg\";\nimport TabletBotBut2x from \"../images/TabletBotBub2x.jpg\";\nimport DesktopBubbles from \"../images/DesktopBubbles.jpg\";\nimport DesktopBubbles2x from \"../images/DesktopBubbles2x.jpg\";\n// import DesktopBottle from '../images/DesktopBottle.png';\n// import DesktopBottle2x from '../images/DesktopBottle2x.png';\n\nexport const Container = styled.div`\n  display: block;\n\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 767px) {\n    padding: 20px;\n    padding-top: 24px;\n    background-image: image-set(\n      url(${PhoneBubbles}) 1x,\n      url(${PhoneBubbles2x}) 2x\n    );\n    background-repeat: no-repeat;\n    background-position: top;\n\n    flex-direction: column-reverse;\n    justify-content: start;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 16px 32px;\n    padding-top: 40px;\n    background-image: image-set(\n      url(${TabletBotBut}) 1x,\n      url(${TabletBotBut2x}) 2x\n    );\n\n    background-repeat: no-repeat;\n    background-position: center;\n    align-items: start;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 20px;\n    align-items: end;\n    padding-top: 24px;\n    background-image: image-set(\n      url(${DesktopBubbles}) 1x,\n      url(${DesktopBubbles2x}) 2x\n    );\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    background-repeat: no-repeat;\n    background-position: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const SingInContainer = styled.div`\n  position: relative;\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-right: 216px;\n  }\n`;\n\nexport const H2 = styled.h2`\n  font-size: 26px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 1440px) {\n    width: 384px;\n  }\n`;\n\nexport const SingInLabel = styled.label`\n  font-size: 18px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const Image = styled.img`\n  width: 280px;\n  /* height: 210px; */\n  margin-top: 50px;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 880px;\n    margin: 0px;\n    display: block;\n  }\n`;\n\nexport const SingInSvg = styled.svg`\n  display: block;\n  position: absolute;\n  top: 42px;\n  right: 10px;\n\n  stroke: #407bff;\n  fill: none;\n`;\n\nexport const SingInInput = styled.input`\n  width: 280px;\n  height: 44px;\n\n  border: 1px solid #d7e3ff;\n  color: #9ebbff;\n  border-radius: 6px;\n  margin: 8px 0px 16px 0px;\n  font-size: 16px;\n\n  padding: 16px 8px;\n\n  &:active,\n  &:focus,\n  &:hover {\n    color: #407bff;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    height: 44px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 384px;\n    height: 44px;\n  }\n`;\n\nexport const SingInButton = styled.button`\n  height: 36px;\n  color: #ffffff;\n  background-color: #407bff;\n  border-radius: 10px;\n  font-size: 16px;\n  font-family: \"Roboto\", sans-serif;\n  box-shadow: 0 4px 8px rgba(64, 123, 255, 0.34);\n  width: 280px;\n  height: 36px;\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    height: 44px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 384px;\n    height: 44px;\n  }\n`;\n\nexport const SingInButton2 = styled.a`\n  font-size: 16px;\n  font-family: \"Roboto\", sans-serif;\n  border: none;\n  background-color: none;\n  color: #407bff;\n  margin-top: 16px;\n`;\n\nexport const SignInFormContainer = styled.div``;\n\nexport const SignInButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport {\n  H2,\n  SingInLabel,\n  SingInButton,\n  SingInButton2,\n  SingInContainer,\n  SignInFormContainer,\n  SignInButtonContainer,\n  Container,\n  SingInSvg,\n  SingInInput,\n  Image,\n} from \"./SigninPageStyled\";\nimport DesctopBottle from \"../images/DesktopBottle.png\";\nimport icons from \"../common/symbol-defs.svg\";\nimport { logIn } from \"../redux/auth/authOperationApi\";\n\nconst SignupSchema = Yup.object().shape({\n  email: Yup.string().email(),\n});\n\nconst SignIn = () => {\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <Image src={DesctopBottle} alt=\"\" />\n\n      <SingInContainer>\n        <H2>Sign In</H2>\n        <SignInFormContainer>\n          <Formik\n            validationSchema={SignupSchema}\n            initialValues={{ email: \"\", password: \"\" }}\n            onSubmit={(values, actions) => {\n              dispatch(logIn(values));\n              actions.resetForm(true);\n            }}\n          >\n            {({ isSubmitting }) => (\n              <Form>\n                <SingInLabel>\n                  Enter your email\n                  <Field\n                    type=\"mail\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"E-mail\"\n                    as={SingInInput}\n                  />\n                </SingInLabel>\n\n                <SingInLabel>\n                  Enter your password\n                  <SingInSvg width={16} height={16}>\n                    <use href={`${icons}#eye`} />\n                  </SingInSvg>\n                  <Field\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    as={SingInInput}\n                  />\n                </SingInLabel>\n\n                <SignInButtonContainer>\n                  <SingInButton type=\"submit\">Sign In</SingInButton>\n                  <SingInButton2 href=\"./SignUp\">Sign Up</SingInButton2>\n                </SignInButtonContainer>\n              </Form>\n            )}\n          </Formik>\n        </SignInFormContainer>\n      </SingInContainer>\n    </Container>\n  );\n};\n\nexport default SignIn;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","PhoneBubbles","PhoneBubbles2x","TabletBotBut","TabletBotBut2x","DesktopBubbles","DesktopBubbles2x","SingInContainer","_templateObject2","H2","h2","_templateObject3","SingInLabel","label","_templateObject4","Image","img","_templateObject5","SingInSvg","svg","_templateObject6","SingInInput","input","_templateObject7","SingInButton","button","_templateObject8","SingInButton2","a","_templateObject9","SignInFormContainer","_templateObject10","SignInButtonContainer","_templateObject11","SignupSchema","Yup","shape","email","SignIn","dispatch","useDispatch","_jsxs","children","_jsx","src","DesctopBottle","alt","Formik","validationSchema","initialValues","password","onSubmit","values","actions","logIn","resetForm","_ref","isSubmitting","Form","Field","type","id","name","placeholder","as","width","height","href","concat","icons"],"sourceRoot":""}